{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOlSxr0MIY9VF357342Z5mV",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Roberto014/Anal-tica-de-datos-y-herramientas-de-inteligencia-artificial-II/blob/main/Act%203.5%20Regresi%C3%B3n%20Lineal%20Simple%20y%20M%C3%BAltiple/Act_3_5_Regresi%C3%B3n_Lineal_Simple_y_M%C3%BAltiple_GRAFICAS%20PRESENTADAS%20EN%20LA%20PRESENTACION\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Extraer las variables cuantitativas"
      ],
      "metadata": {
        "id": "fi2KMDwGKAlR"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ],
      "metadata": {
        "id": "esNct7rsKfnA"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.read_csv(\"Datos_limpios (4).csv\")"
      ],
      "metadata": {
        "id": "66afsnfuKjKi"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Eliminar un signo de una columna\n",
        "df['host_is_superhost']=df['host_is_superhost'].str.replace('t', '1')\n",
        "df['host_is_superhost']=df['host_is_superhost'].str.replace('f', '0')\n",
        "df['host_is_superhost']=df['host_is_superhost'].str.replace('Desconocido', '0')"
      ],
      "metadata": {
        "id": "JfOrV8566YGS"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Conversión de tipo de dato de columna de tipo Object a Float\n",
        "df['host_is_superhost']= df['host_is_superhost'].astype(float)"
      ],
      "metadata": {
        "id": "5Qe76M4m7PJ0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Eliminar un signo de una columna\n",
        "df['room_type']=df['room_type'].str.replace('Entire home/apt', '1')\n",
        "df['room_type']=df['room_type'].str.replace('Private room', '2')\n",
        "df['room_type']=df['room_type'].str.replace('Shared room', '3')\n",
        "df['room_type']=df['room_type'].str.replace('Hotel room', '4')\n",
        "df['room_type']=df['room_type'].str.replace('En1ire home/ap1', '1')\n",
        "df['room_type']=df['room_type'].str.replace('Priva1e room', '2')\n",
        "df['room_type']=df['room_type'].str.replace('Ho1el room', '4')"
      ],
      "metadata": {
        "id": "ltor2zwWtetV"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Conversión de tipo de dato de columna de tipo Object a Float\n",
        "df['room_type']= df['room_type'].astype(float)"
      ],
      "metadata": {
        "id": "_EmHIWMStgq4"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "gD-pz0y2JuIP"
      },
      "outputs": [],
      "source": [
        "cuantitativas = df[['scrape_id','host_id','host_response_rate','host_listings_count','host_total_listings_count','latitude','longitude','accommodates','minimum_nights','maximum_nights','minimum_minimum_nights','availability_60','availability_90','availability_365','number_of_reviews','number_of_reviews_ltm','number_of_reviews_l30d','calculated_host_listings_count','calculated_host_listings_count_entire_homes','calculated_host_listings_count_private_rooms','calculated_host_listings_count_shared_rooms','host_acceptance_rate','bathrooms','bedrooms','beds','price','review_scores_rating','review_scores_accuracy','review_scores_cleanliness','review_scores_checkin','review_scores_communication','review_scores_location','review_scores_value','reviews_per_month','host_is_superhost','room_type']]"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cuantitativas.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1w3QdrcCL7P8",
        "outputId": "a29b37a8-bc56-4c01-b595-4c0495caab36"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 26536 entries, 0 to 26535\n",
            "Data columns (total 36 columns):\n",
            " #   Column                                        Non-Null Count  Dtype  \n",
            "---  ------                                        --------------  -----  \n",
            " 0   scrape_id                                     26536 non-null  int64  \n",
            " 1   host_id                                       26536 non-null  int64  \n",
            " 2   host_response_rate                            26536 non-null  float64\n",
            " 3   host_listings_count                           26536 non-null  float64\n",
            " 4   host_total_listings_count                     26536 non-null  float64\n",
            " 5   latitude                                      26536 non-null  float64\n",
            " 6   longitude                                     26536 non-null  float64\n",
            " 7   accommodates                                  26536 non-null  float64\n",
            " 8   minimum_nights                                26536 non-null  float64\n",
            " 9   maximum_nights                                26536 non-null  int64  \n",
            " 10  minimum_minimum_nights                        26536 non-null  float64\n",
            " 11  availability_60                               26536 non-null  int64  \n",
            " 12  availability_90                               26536 non-null  int64  \n",
            " 13  availability_365                              26536 non-null  int64  \n",
            " 14  number_of_reviews                             26536 non-null  float64\n",
            " 15  number_of_reviews_ltm                         26536 non-null  float64\n",
            " 16  number_of_reviews_l30d                        26536 non-null  float64\n",
            " 17  calculated_host_listings_count                26536 non-null  float64\n",
            " 18  calculated_host_listings_count_entire_homes   26536 non-null  float64\n",
            " 19  calculated_host_listings_count_private_rooms  26536 non-null  float64\n",
            " 20  calculated_host_listings_count_shared_rooms   26536 non-null  float64\n",
            " 21  host_acceptance_rate                          26536 non-null  float64\n",
            " 22  bathrooms                                     26536 non-null  float64\n",
            " 23  bedrooms                                      26536 non-null  float64\n",
            " 24  beds                                          26536 non-null  float64\n",
            " 25  price                                         26536 non-null  float64\n",
            " 26  review_scores_rating                          26536 non-null  float64\n",
            " 27  review_scores_accuracy                        26536 non-null  float64\n",
            " 28  review_scores_cleanliness                     26536 non-null  float64\n",
            " 29  review_scores_checkin                         26536 non-null  float64\n",
            " 30  review_scores_communication                   26536 non-null  float64\n",
            " 31  review_scores_location                        26536 non-null  float64\n",
            " 32  review_scores_value                           26536 non-null  float64\n",
            " 33  reviews_per_month                             26536 non-null  float64\n",
            " 34  host_is_superhost                             26536 non-null  float64\n",
            " 35  room_type                                     26536 non-null  float64\n",
            "dtypes: float64(30), int64(6)\n",
            "memory usage: 7.3 MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "valores_nulos = cuantitativas.isnull().sum().sum()\n",
        "valores_nulos"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Byk9ZWT1LJKn",
        "outputId": "f3f9a6e0-0e33-4cbe-be02-c5be6ced0192"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {},
          "execution_count": 67
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Corre_Factors = cuantitativas.corr()"
      ],
      "metadata": {
        "id": "vFe7jy_htwJG"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Corre_Factors = abs(Corre_Factors)\n",
        "Corre_Factors"
      ],
      "metadata": {
        "id": "anrmGfD8q1BL",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "67482e23-5617-4ca3-f32b-4d435a318a38"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                              scrape_id   host_id  \\\n",
              "scrape_id                                           NaN       NaN   \n",
              "host_id                                             NaN  1.000000   \n",
              "host_response_rate                                  NaN  0.021472   \n",
              "host_listings_count                                 NaN  0.113428   \n",
              "host_total_listings_count                           NaN  0.137314   \n",
              "latitude                                            NaN  0.062082   \n",
              "longitude                                           NaN  0.065841   \n",
              "accommodates                                        NaN  0.000482   \n",
              "minimum_nights                                      NaN  0.018196   \n",
              "maximum_nights                                      NaN  0.055268   \n",
              "minimum_minimum_nights                              NaN  0.101651   \n",
              "availability_60                                     NaN  0.118073   \n",
              "availability_90                                     NaN  0.117047   \n",
              "availability_365                                    NaN  0.095507   \n",
              "number_of_reviews                                   NaN  0.182865   \n",
              "number_of_reviews_ltm                               NaN  0.035150   \n",
              "number_of_reviews_l30d                              NaN  0.018505   \n",
              "calculated_host_listings_count                      NaN  0.016482   \n",
              "calculated_host_listings_count_entire_homes         NaN  0.029795   \n",
              "calculated_host_listings_count_private_rooms        NaN  0.105943   \n",
              "calculated_host_listings_count_shared_rooms         NaN  0.041580   \n",
              "host_acceptance_rate                                NaN  0.056154   \n",
              "bathrooms                                           NaN  0.032261   \n",
              "bedrooms                                            NaN  0.031531   \n",
              "beds                                                NaN  0.042882   \n",
              "price                                               NaN  0.017918   \n",
              "review_scores_rating                                NaN  0.068387   \n",
              "review_scores_accuracy                              NaN  0.081241   \n",
              "review_scores_cleanliness                           NaN  0.041617   \n",
              "review_scores_checkin                               NaN  0.083153   \n",
              "review_scores_communication                         NaN  0.093356   \n",
              "review_scores_location                              NaN  0.102562   \n",
              "review_scores_value                                 NaN  0.072051   \n",
              "reviews_per_month                                   NaN  0.078959   \n",
              "host_is_superhost                                   NaN  0.077526   \n",
              "room_type                                           NaN  0.029127   \n",
              "\n",
              "                                              host_response_rate  \\\n",
              "scrape_id                                                    NaN   \n",
              "host_id                                                 0.021472   \n",
              "host_response_rate                                      1.000000   \n",
              "host_listings_count                                     0.074886   \n",
              "host_total_listings_count                               0.041225   \n",
              "latitude                                                0.024738   \n",
              "longitude                                               0.030740   \n",
              "accommodates                                            0.086731   \n",
              "minimum_nights                                          0.103761   \n",
              "maximum_nights                                          0.004145   \n",
              "minimum_minimum_nights                                  0.093961   \n",
              "availability_60                                         0.005555   \n",
              "availability_90                                         0.005843   \n",
              "availability_365                                        0.014189   \n",
              "number_of_reviews                                       0.158784   \n",
              "number_of_reviews_ltm                                   0.217559   \n",
              "number_of_reviews_l30d                                  0.183309   \n",
              "calculated_host_listings_count                          0.064198   \n",
              "calculated_host_listings_count_entire_homes             0.115303   \n",
              "calculated_host_listings_count_private_rooms            0.014374   \n",
              "calculated_host_listings_count_shared_rooms             0.040359   \n",
              "host_acceptance_rate                                    0.311305   \n",
              "bathrooms                                               0.009061   \n",
              "bedrooms                                                0.024768   \n",
              "beds                                                    0.050746   \n",
              "price                                                   0.000106   \n",
              "review_scores_rating                                    0.055260   \n",
              "review_scores_accuracy                                  0.065385   \n",
              "review_scores_cleanliness                               0.065079   \n",
              "review_scores_checkin                                   0.072651   \n",
              "review_scores_communication                             0.103898   \n",
              "review_scores_location                                  0.044546   \n",
              "review_scores_value                                     0.062425   \n",
              "reviews_per_month                                       0.166419   \n",
              "host_is_superhost                                       0.240062   \n",
              "room_type                                               0.133798   \n",
              "\n",
              "                                              host_listings_count  \\\n",
              "scrape_id                                                     NaN   \n",
              "host_id                                                  0.113428   \n",
              "host_response_rate                                       0.074886   \n",
              "host_listings_count                                      1.000000   \n",
              "host_total_listings_count                                0.718386   \n",
              "latitude                                                 0.148908   \n",
              "longitude                                                0.053413   \n",
              "accommodates                                             0.063836   \n",
              "minimum_nights                                           0.008692   \n",
              "maximum_nights                                           0.026395   \n",
              "minimum_minimum_nights                                   0.028608   \n",
              "availability_60                                          0.077801   \n",
              "availability_90                                          0.088985   \n",
              "availability_365                                         0.121436   \n",
              "number_of_reviews                                        0.007431   \n",
              "number_of_reviews_ltm                                    0.084818   \n",
              "number_of_reviews_l30d                                   0.116376   \n",
              "calculated_host_listings_count                           0.644709   \n",
              "calculated_host_listings_count_entire_homes              0.547027   \n",
              "calculated_host_listings_count_private_rooms             0.427874   \n",
              "calculated_host_listings_count_shared_rooms              0.030556   \n",
              "host_acceptance_rate                                     0.074569   \n",
              "bathrooms                                                0.087734   \n",
              "bedrooms                                                 0.022955   \n",
              "beds                                                     0.022923   \n",
              "price                                                    0.074632   \n",
              "review_scores_rating                                     0.105681   \n",
              "review_scores_accuracy                                   0.092107   \n",
              "review_scores_cleanliness                                0.066282   \n",
              "review_scores_checkin                                    0.070940   \n",
              "review_scores_communication                              0.105806   \n",
              "review_scores_location                                   0.032861   \n",
              "review_scores_value                                      0.114909   \n",
              "reviews_per_month                                        0.131283   \n",
              "host_is_superhost                                        0.090525   \n",
              "room_type                                                0.076024   \n",
              "\n",
              "                                              host_total_listings_count  \\\n",
              "scrape_id                                                           NaN   \n",
              "host_id                                                        0.137314   \n",
              "host_response_rate                                             0.041225   \n",
              "host_listings_count                                            0.718386   \n",
              "host_total_listings_count                                      1.000000   \n",
              "latitude                                                       0.129753   \n",
              "longitude                                                      0.059585   \n",
              "accommodates                                                   0.058296   \n",
              "minimum_nights                                                 0.187803   \n",
              "maximum_nights                                                 0.129995   \n",
              "minimum_minimum_nights                                         0.036290   \n",
              "availability_60                                                0.056917   \n",
              "availability_90                                                0.066005   \n",
              "availability_365                                               0.142745   \n",
              "number_of_reviews                                              0.015221   \n",
              "number_of_reviews_ltm                                          0.059341   \n",
              "number_of_reviews_l30d                                         0.100977   \n",
              "calculated_host_listings_count                                 0.535333   \n",
              "calculated_host_listings_count_entire_homes                    0.499771   \n",
              "calculated_host_listings_count_private_rooms                   0.277165   \n",
              "calculated_host_listings_count_shared_rooms                    0.002002   \n",
              "host_acceptance_rate                                           0.096864   \n",
              "bathrooms                                                      0.053107   \n",
              "bedrooms                                                       0.000680   \n",
              "beds                                                           0.029494   \n",
              "price                                                          0.080463   \n",
              "review_scores_rating                                           0.102633   \n",
              "review_scores_accuracy                                         0.084014   \n",
              "review_scores_cleanliness                                      0.057035   \n",
              "review_scores_checkin                                          0.069795   \n",
              "review_scores_communication                                    0.117926   \n",
              "review_scores_location                                         0.026661   \n",
              "review_scores_value                                            0.105635   \n",
              "reviews_per_month                                              0.112306   \n",
              "host_is_superhost                                              0.009997   \n",
              "room_type                                                      0.111042   \n",
              "\n",
              "                                              latitude  longitude  \\\n",
              "scrape_id                                          NaN        NaN   \n",
              "host_id                                       0.062082   0.065841   \n",
              "host_response_rate                            0.024738   0.030740   \n",
              "host_listings_count                           0.148908   0.053413   \n",
              "host_total_listings_count                     0.129753   0.059585   \n",
              "latitude                                      1.000000   0.123540   \n",
              "longitude                                     0.123540   1.000000   \n",
              "accommodates                                  0.086307   0.006521   \n",
              "minimum_nights                                0.029481   0.037008   \n",
              "maximum_nights                                0.030242   0.030278   \n",
              "minimum_minimum_nights                        0.051972   0.023120   \n",
              "availability_60                               0.057261   0.035776   \n",
              "availability_90                               0.053181   0.026600   \n",
              "availability_365                              0.024465   0.003155   \n",
              "number_of_reviews                             0.081044   0.046774   \n",
              "number_of_reviews_ltm                         0.122445   0.063564   \n",
              "number_of_reviews_l30d                        0.095120   0.046313   \n",
              "calculated_host_listings_count                0.146767   0.041985   \n",
              "calculated_host_listings_count_entire_homes   0.112787   0.069198   \n",
              "calculated_host_listings_count_private_rooms  0.003149   0.027244   \n",
              "calculated_host_listings_count_shared_rooms   0.047659   0.004837   \n",
              "host_acceptance_rate                          0.071602   0.010687   \n",
              "bathrooms                                     0.003536   0.092629   \n",
              "bedrooms                                      0.005168   0.033895   \n",
              "beds                                          0.011054   0.020037   \n",
              "price                                         0.049648   0.127475   \n",
              "review_scores_rating                          0.034015   0.006168   \n",
              "review_scores_accuracy                        0.023402   0.005254   \n",
              "review_scores_cleanliness                     0.022979   0.008617   \n",
              "review_scores_checkin                         0.002037   0.013586   \n",
              "review_scores_communication                   0.030312   0.011644   \n",
              "review_scores_location                        0.019723   0.096174   \n",
              "review_scores_value                           0.024525   0.003031   \n",
              "reviews_per_month                             0.137884   0.079174   \n",
              "host_is_superhost                             0.033568   0.027188   \n",
              "room_type                                     0.115890   0.060082   \n",
              "\n",
              "                                              accommodates  minimum_nights  \\\n",
              "scrape_id                                              NaN             NaN   \n",
              "host_id                                           0.000482        0.018196   \n",
              "host_response_rate                                0.086731        0.103761   \n",
              "host_listings_count                               0.063836        0.008692   \n",
              "host_total_listings_count                         0.058296        0.187803   \n",
              "latitude                                          0.086307        0.029481   \n",
              "longitude                                         0.006521        0.037008   \n",
              "accommodates                                      1.000000        0.065755   \n",
              "minimum_nights                                    0.065755        1.000000   \n",
              "maximum_nights                                    0.025036        0.035216   \n",
              "minimum_minimum_nights                            0.073073        0.850200   \n",
              "availability_60                                   0.051279        0.036661   \n",
              "availability_90                                   0.038553        0.039527   \n",
              "availability_365                                  0.002981        0.007065   \n",
              "number_of_reviews                                 0.103073        0.132686   \n",
              "number_of_reviews_ltm                             0.147557        0.169897   \n",
              "number_of_reviews_l30d                            0.105073        0.118383   \n",
              "calculated_host_listings_count                    0.067243        0.005832   \n",
              "calculated_host_listings_count_entire_homes       0.138460        0.049867   \n",
              "calculated_host_listings_count_private_rooms      0.189391        0.082534   \n",
              "calculated_host_listings_count_shared_rooms       0.057116        0.028618   \n",
              "host_acceptance_rate                              0.119404        0.141321   \n",
              "bathrooms                                         0.447894        0.035153   \n",
              "bedrooms                                          0.691493        0.003079   \n",
              "beds                                              0.665378        0.020585   \n",
              "price                                             0.367494        0.018795   \n",
              "review_scores_rating                              0.025788        0.009726   \n",
              "review_scores_accuracy                            0.036436        0.003855   \n",
              "review_scores_cleanliness                         0.025843        0.014101   \n",
              "review_scores_checkin                             0.018514        0.010177   \n",
              "review_scores_communication                       0.031031        0.032218   \n",
              "review_scores_location                            0.018167        0.003152   \n",
              "review_scores_value                               0.044812        0.018865   \n",
              "reviews_per_month                                 0.127483        0.128673   \n",
              "host_is_superhost                                 0.102857        0.104695   \n",
              "room_type                                         0.439602        0.011029   \n",
              "\n",
              "                                              maximum_nights  \\\n",
              "scrape_id                                                NaN   \n",
              "host_id                                             0.055268   \n",
              "host_response_rate                                  0.004145   \n",
              "host_listings_count                                 0.026395   \n",
              "host_total_listings_count                           0.129995   \n",
              "latitude                                            0.030242   \n",
              "longitude                                           0.030278   \n",
              "accommodates                                        0.025036   \n",
              "minimum_nights                                      0.035216   \n",
              "maximum_nights                                      1.000000   \n",
              "minimum_minimum_nights                              0.020209   \n",
              "availability_60                                     0.056507   \n",
              "availability_90                                     0.050714   \n",
              "availability_365                                    0.123046   \n",
              "number_of_reviews                                   0.130393   \n",
              "number_of_reviews_ltm                               0.047431   \n",
              "number_of_reviews_l30d                              0.003660   \n",
              "calculated_host_listings_count                      0.033598   \n",
              "calculated_host_listings_count_entire_homes         0.010918   \n",
              "calculated_host_listings_count_private_rooms        0.015520   \n",
              "calculated_host_listings_count_shared_rooms         0.037339   \n",
              "host_acceptance_rate                                0.050027   \n",
              "bathrooms                                           0.007215   \n",
              "bedrooms                                            0.011816   \n",
              "beds                                                0.058703   \n",
              "price                                               0.010227   \n",
              "review_scores_rating                                0.058042   \n",
              "review_scores_accuracy                              0.037275   \n",
              "review_scores_cleanliness                           0.043959   \n",
              "review_scores_checkin                               0.012715   \n",
              "review_scores_communication                         0.036135   \n",
              "review_scores_location                              0.019347   \n",
              "review_scores_value                                 0.037986   \n",
              "reviews_per_month                                   0.033959   \n",
              "host_is_superhost                                   0.007010   \n",
              "room_type                                           0.052956   \n",
              "\n",
              "                                              minimum_minimum_nights  \\\n",
              "scrape_id                                                        NaN   \n",
              "host_id                                                     0.101651   \n",
              "host_response_rate                                          0.093961   \n",
              "host_listings_count                                         0.028608   \n",
              "host_total_listings_count                                   0.036290   \n",
              "latitude                                                    0.051972   \n",
              "longitude                                                   0.023120   \n",
              "accommodates                                                0.073073   \n",
              "minimum_nights                                              0.850200   \n",
              "maximum_nights                                              0.020209   \n",
              "minimum_minimum_nights                                      1.000000   \n",
              "availability_60                                             0.048611   \n",
              "availability_90                                             0.054522   \n",
              "availability_365                                            0.047295   \n",
              "number_of_reviews                                           0.117505   \n",
              "number_of_reviews_ltm                                       0.164422   \n",
              "number_of_reviews_l30d                                      0.132459   \n",
              "calculated_host_listings_count                              0.006921   \n",
              "calculated_host_listings_count_entire_homes                 0.075778   \n",
              "calculated_host_listings_count_private_rooms                0.064363   \n",
              "calculated_host_listings_count_shared_rooms                 0.024187   \n",
              "host_acceptance_rate                                        0.189496   \n",
              "bathrooms                                                   0.034659   \n",
              "bedrooms                                                    0.005692   \n",
              "beds                                                        0.021080   \n",
              "price                                                       0.008360   \n",
              "review_scores_rating                                        0.023122   \n",
              "review_scores_accuracy                                      0.006629   \n",
              "review_scores_cleanliness                                   0.006938   \n",
              "review_scores_checkin                                       0.005832   \n",
              "review_scores_communication                                 0.002269   \n",
              "review_scores_location                                      0.007688   \n",
              "review_scores_value                                         0.004878   \n",
              "reviews_per_month                                           0.131129   \n",
              "host_is_superhost                                           0.089739   \n",
              "room_type                                                   0.026653   \n",
              "\n",
              "                                              availability_60  \\\n",
              "scrape_id                                                 NaN   \n",
              "host_id                                              0.118073   \n",
              "host_response_rate                                   0.005555   \n",
              "host_listings_count                                  0.077801   \n",
              "host_total_listings_count                            0.056917   \n",
              "latitude                                             0.057261   \n",
              "longitude                                            0.035776   \n",
              "accommodates                                         0.051279   \n",
              "minimum_nights                                       0.036661   \n",
              "maximum_nights                                       0.056507   \n",
              "minimum_minimum_nights                               0.048611   \n",
              "availability_60                                      1.000000   \n",
              "availability_90                                      0.973138   \n",
              "availability_365                                     0.546986   \n",
              "number_of_reviews                                    0.024651   \n",
              "number_of_reviews_ltm                                0.033154   \n",
              "number_of_reviews_l30d                               0.051003   \n",
              "calculated_host_listings_count                       0.094189   \n",
              "calculated_host_listings_count_entire_homes          0.047218   \n",
              "calculated_host_listings_count_private_rooms         0.094506   \n",
              "calculated_host_listings_count_shared_rooms          0.070910   \n",
              "host_acceptance_rate                                 0.034269   \n",
              "bathrooms                                            0.071658   \n",
              "bedrooms                                             0.117818   \n",
              "beds                                                 0.107770   \n",
              "price                                                0.010166   \n",
              "review_scores_rating                                 0.067441   \n",
              "review_scores_accuracy                               0.077462   \n",
              "review_scores_cleanliness                            0.051877   \n",
              "review_scores_checkin                                0.065129   \n",
              "review_scores_communication                          0.070709   \n",
              "review_scores_location                               0.053134   \n",
              "review_scores_value                                  0.089166   \n",
              "reviews_per_month                                    0.061726   \n",
              "host_is_superhost                                    0.018289   \n",
              "room_type                                            0.097691   \n",
              "\n",
              "                                              availability_90  \\\n",
              "scrape_id                                                 NaN   \n",
              "host_id                                              0.117047   \n",
              "host_response_rate                                   0.005843   \n",
              "host_listings_count                                  0.088985   \n",
              "host_total_listings_count                            0.066005   \n",
              "latitude                                             0.053181   \n",
              "longitude                                            0.026600   \n",
              "accommodates                                         0.038553   \n",
              "minimum_nights                                       0.039527   \n",
              "maximum_nights                                       0.050714   \n",
              "minimum_minimum_nights                               0.054522   \n",
              "availability_60                                      0.973138   \n",
              "availability_90                                      1.000000   \n",
              "availability_365                                     0.597661   \n",
              "number_of_reviews                                    0.005138   \n",
              "number_of_reviews_ltm                                0.062658   \n",
              "number_of_reviews_l30d                               0.073699   \n",
              "calculated_host_listings_count                       0.101638   \n",
              "calculated_host_listings_count_entire_homes          0.060382   \n",
              "calculated_host_listings_count_private_rooms         0.092309   \n",
              "calculated_host_listings_count_shared_rooms          0.068076   \n",
              "host_acceptance_rate                                 0.022589   \n",
              "bathrooms                                            0.069592   \n",
              "bedrooms                                             0.115858   \n",
              "beds                                                 0.100041   \n",
              "price                                                0.017350   \n",
              "review_scores_rating                                 0.062091   \n",
              "review_scores_accuracy                               0.070257   \n",
              "review_scores_cleanliness                            0.047798   \n",
              "review_scores_checkin                                0.058484   \n",
              "review_scores_communication                          0.062277   \n",
              "review_scores_location                               0.048903   \n",
              "review_scores_value                                  0.082587   \n",
              "reviews_per_month                                    0.080822   \n",
              "host_is_superhost                                    0.007140   \n",
              "room_type                                            0.076976   \n",
              "\n",
              "                                              availability_365  \\\n",
              "scrape_id                                                  NaN   \n",
              "host_id                                               0.095507   \n",
              "host_response_rate                                    0.014189   \n",
              "host_listings_count                                   0.121436   \n",
              "host_total_listings_count                             0.142745   \n",
              "latitude                                              0.024465   \n",
              "longitude                                             0.003155   \n",
              "accommodates                                          0.002981   \n",
              "minimum_nights                                        0.007065   \n",
              "maximum_nights                                        0.123046   \n",
              "minimum_minimum_nights                                0.047295   \n",
              "availability_60                                       0.546986   \n",
              "availability_90                                       0.597661   \n",
              "availability_365                                      1.000000   \n",
              "number_of_reviews                                     0.026494   \n",
              "number_of_reviews_ltm                                 0.080289   \n",
              "number_of_reviews_l30d                                0.080555   \n",
              "calculated_host_listings_count                        0.132917   \n",
              "calculated_host_listings_count_entire_homes           0.108489   \n",
              "calculated_host_listings_count_private_rooms          0.082502   \n",
              "calculated_host_listings_count_shared_rooms           0.022093   \n",
              "host_acceptance_rate                                  0.011246   \n",
              "bathrooms                                             0.032717   \n",
              "bedrooms                                              0.070495   \n",
              "beds                                                  0.024701   \n",
              "price                                                 0.008551   \n",
              "review_scores_rating                                  0.077299   \n",
              "review_scores_accuracy                                0.080741   \n",
              "review_scores_cleanliness                             0.057252   \n",
              "review_scores_checkin                                 0.058474   \n",
              "review_scores_communication                           0.069895   \n",
              "review_scores_location                                0.047560   \n",
              "review_scores_value                                   0.091495   \n",
              "reviews_per_month                                     0.065928   \n",
              "host_is_superhost                                     0.031756   \n",
              "room_type                                             0.013219   \n",
              "\n",
              "                                              number_of_reviews  \\\n",
              "scrape_id                                                   NaN   \n",
              "host_id                                                0.182865   \n",
              "host_response_rate                                     0.158784   \n",
              "host_listings_count                                    0.007431   \n",
              "host_total_listings_count                              0.015221   \n",
              "latitude                                               0.081044   \n",
              "longitude                                              0.046774   \n",
              "accommodates                                           0.103073   \n",
              "minimum_nights                                         0.132686   \n",
              "maximum_nights                                         0.130393   \n",
              "minimum_minimum_nights                                 0.117505   \n",
              "availability_60                                        0.024651   \n",
              "availability_90                                        0.005138   \n",
              "availability_365                                       0.026494   \n",
              "number_of_reviews                                      1.000000   \n",
              "number_of_reviews_ltm                                  0.611917   \n",
              "number_of_reviews_l30d                                 0.367335   \n",
              "calculated_host_listings_count                         0.062745   \n",
              "calculated_host_listings_count_entire_homes            0.103048   \n",
              "calculated_host_listings_count_private_rooms           0.055162   \n",
              "calculated_host_listings_count_shared_rooms            0.035630   \n",
              "host_acceptance_rate                                   0.210869   \n",
              "bathrooms                                              0.026459   \n",
              "bedrooms                                               0.006057   \n",
              "beds                                                   0.113194   \n",
              "price                                                  0.049512   \n",
              "review_scores_rating                                   0.022040   \n",
              "review_scores_accuracy                                 0.075481   \n",
              "review_scores_cleanliness                              0.035423   \n",
              "review_scores_checkin                                  0.097972   \n",
              "review_scores_communication                            0.080916   \n",
              "review_scores_location                                 0.051425   \n",
              "review_scores_value                                    0.090259   \n",
              "reviews_per_month                                      0.465150   \n",
              "host_is_superhost                                      0.240164   \n",
              "room_type                                              0.164096   \n",
              "\n",
              "                                              number_of_reviews_ltm  \\\n",
              "scrape_id                                                       NaN   \n",
              "host_id                                                    0.035150   \n",
              "host_response_rate                                         0.217559   \n",
              "host_listings_count                                        0.084818   \n",
              "host_total_listings_count                                  0.059341   \n",
              "latitude                                                   0.122445   \n",
              "longitude                                                  0.063564   \n",
              "accommodates                                               0.147557   \n",
              "minimum_nights                                             0.169897   \n",
              "maximum_nights                                             0.047431   \n",
              "minimum_minimum_nights                                     0.164422   \n",
              "availability_60                                            0.033154   \n",
              "availability_90                                            0.062658   \n",
              "availability_365                                           0.080289   \n",
              "number_of_reviews                                          0.611917   \n",
              "number_of_reviews_ltm                                      1.000000   \n",
              "number_of_reviews_l30d                                     0.610716   \n",
              "calculated_host_listings_count                             0.151234   \n",
              "calculated_host_listings_count_entire_homes                0.200210   \n",
              "calculated_host_listings_count_private_rooms               0.034116   \n",
              "calculated_host_listings_count_shared_rooms                0.039716   \n",
              "host_acceptance_rate                                       0.272320   \n",
              "bathrooms                                                  0.011701   \n",
              "bedrooms                                                   0.024415   \n",
              "beds                                                       0.102902   \n",
              "price                                                      0.054858   \n",
              "review_scores_rating                                       0.034970   \n",
              "review_scores_accuracy                                     0.067451   \n",
              "review_scores_cleanliness                                  0.040844   \n",
              "review_scores_checkin                                      0.075672   \n",
              "review_scores_communication                                0.079232   \n",
              "review_scores_location                                     0.029089   \n",
              "review_scores_value                                        0.089838   \n",
              "reviews_per_month                                          0.731671   \n",
              "host_is_superhost                                          0.322853   \n",
              "room_type                                                  0.213815   \n",
              "\n",
              "                                              number_of_reviews_l30d  \\\n",
              "scrape_id                                                        NaN   \n",
              "host_id                                                     0.018505   \n",
              "host_response_rate                                          0.183309   \n",
              "host_listings_count                                         0.116376   \n",
              "host_total_listings_count                                   0.100977   \n",
              "latitude                                                    0.095120   \n",
              "longitude                                                   0.046313   \n",
              "accommodates                                                0.105073   \n",
              "minimum_nights                                              0.118383   \n",
              "maximum_nights                                              0.003660   \n",
              "minimum_minimum_nights                                      0.132459   \n",
              "availability_60                                             0.051003   \n",
              "availability_90                                             0.073699   \n",
              "availability_365                                            0.080555   \n",
              "number_of_reviews                                           0.367335   \n",
              "number_of_reviews_ltm                                       0.610716   \n",
              "number_of_reviews_l30d                                      1.000000   \n",
              "calculated_host_listings_count                              0.150406   \n",
              "calculated_host_listings_count_entire_homes                 0.187932   \n",
              "calculated_host_listings_count_private_rooms                0.005318   \n",
              "calculated_host_listings_count_shared_rooms                 0.032826   \n",
              "host_acceptance_rate                                        0.209309   \n",
              "bathrooms                                                   0.014557   \n",
              "bedrooms                                                    0.017562   \n",
              "beds                                                        0.053157   \n",
              "price                                                       0.054253   \n",
              "review_scores_rating                                        0.039479   \n",
              "review_scores_accuracy                                      0.064175   \n",
              "review_scores_cleanliness                                   0.049972   \n",
              "review_scores_checkin                                       0.063630   \n",
              "review_scores_communication                                 0.071812   \n",
              "review_scores_location                                      0.029815   \n",
              "review_scores_value                                         0.079456   \n",
              "reviews_per_month                                           0.599801   \n",
              "host_is_superhost                                           0.225695   \n",
              "room_type                                                   0.164090   \n",
              "\n",
              "                                              calculated_host_listings_count  \\\n",
              "scrape_id                                                                NaN   \n",
              "host_id                                                             0.016482   \n",
              "host_response_rate                                                  0.064198   \n",
              "host_listings_count                                                 0.644709   \n",
              "host_total_listings_count                                           0.535333   \n",
              "latitude                                                            0.146767   \n",
              "longitude                                                           0.041985   \n",
              "accommodates                                                        0.067243   \n",
              "minimum_nights                                                      0.005832   \n",
              "maximum_nights                                                      0.033598   \n",
              "minimum_minimum_nights                                              0.006921   \n",
              "availability_60                                                     0.094189   \n",
              "availability_90                                                     0.101638   \n",
              "availability_365                                                    0.132917   \n",
              "number_of_reviews                                                   0.062745   \n",
              "number_of_reviews_ltm                                               0.151234   \n",
              "number_of_reviews_l30d                                              0.150406   \n",
              "calculated_host_listings_count                                      1.000000   \n",
              "calculated_host_listings_count_entire_homes                         0.897941   \n",
              "calculated_host_listings_count_private_rooms                        0.152205   \n",
              "calculated_host_listings_count_shared_rooms                         0.048062   \n",
              "host_acceptance_rate                                                0.053454   \n",
              "bathrooms                                                           0.093919   \n",
              "bedrooms                                                            0.009676   \n",
              "beds                                                                0.031534   \n",
              "price                                                               0.044357   \n",
              "review_scores_rating                                                0.076046   \n",
              "review_scores_accuracy                                              0.053837   \n",
              "review_scores_cleanliness                                           0.030272   \n",
              "review_scores_checkin                                               0.050565   \n",
              "review_scores_communication                                         0.071185   \n",
              "review_scores_location                                              0.000246   \n",
              "review_scores_value                                                 0.079661   \n",
              "reviews_per_month                                                   0.186808   \n",
              "host_is_superhost                                                   0.027800   \n",
              "room_type                                                           0.067083   \n",
              "\n",
              "                                              calculated_host_listings_count_entire_homes  \\\n",
              "scrape_id                                                                             NaN   \n",
              "host_id                                                                          0.029795   \n",
              "host_response_rate                                                               0.115303   \n",
              "host_listings_count                                                              0.547027   \n",
              "host_total_listings_count                                                        0.499771   \n",
              "latitude                                                                         0.112787   \n",
              "longitude                                                                        0.069198   \n",
              "accommodates                                                                     0.138460   \n",
              "minimum_nights                                                                   0.049867   \n",
              "maximum_nights                                                                   0.010918   \n",
              "minimum_minimum_nights                                                           0.075778   \n",
              "availability_60                                                                  0.047218   \n",
              "availability_90                                                                  0.060382   \n",
              "availability_365                                                                 0.108489   \n",
              "number_of_reviews                                                                0.103048   \n",
              "number_of_reviews_ltm                                                            0.200210   \n",
              "number_of_reviews_l30d                                                           0.187932   \n",
              "calculated_host_listings_count                                                   0.897941   \n",
              "calculated_host_listings_count_entire_homes                                      1.000000   \n",
              "calculated_host_listings_count_private_rooms                                     0.004970   \n",
              "calculated_host_listings_count_shared_rooms                                      0.035358   \n",
              "host_acceptance_rate                                                             0.149809   \n",
              "bathrooms                                                                        0.063907   \n",
              "bedrooms                                                                         0.068790   \n",
              "beds                                                                             0.078210   \n",
              "price                                                                            0.095518   \n",
              "review_scores_rating                                                             0.051478   \n",
              "review_scores_accuracy                                                           0.018086   \n",
              "review_scores_cleanliness                                                        0.004635   \n",
              "review_scores_checkin                                                            0.027904   \n",
              "review_scores_communication                                                      0.046603   \n",
              "review_scores_location                                                           0.008196   \n",
              "review_scores_value                                                              0.051908   \n",
              "reviews_per_month                                                                0.222120   \n",
              "host_is_superhost                                                                0.067503   \n",
              "room_type                                                                        0.244157   \n",
              "\n",
              "                                              calculated_host_listings_count_private_rooms  \\\n",
              "scrape_id                                                                              NaN   \n",
              "host_id                                                                           0.105943   \n",
              "host_response_rate                                                                0.014374   \n",
              "host_listings_count                                                               0.427874   \n",
              "host_total_listings_count                                                         0.277165   \n",
              "latitude                                                                          0.003149   \n",
              "longitude                                                                         0.027244   \n",
              "accommodates                                                                      0.189391   \n",
              "minimum_nights                                                                    0.082534   \n",
              "maximum_nights                                                                    0.015520   \n",
              "minimum_minimum_nights                                                            0.064363   \n",
              "availability_60                                                                   0.094506   \n",
              "availability_90                                                                   0.092309   \n",
              "availability_365                                                                  0.082502   \n",
              "number_of_reviews                                                                 0.055162   \n",
              "number_of_reviews_ltm                                                             0.034116   \n",
              "number_of_reviews_l30d                                                            0.005318   \n",
              "calculated_host_listings_count                                                    0.152205   \n",
              "calculated_host_listings_count_entire_homes                                       0.004970   \n",
              "calculated_host_listings_count_private_rooms                                      1.000000   \n",
              "calculated_host_listings_count_shared_rooms                                       0.086750   \n",
              "host_acceptance_rate                                                              0.025056   \n",
              "bathrooms                                                                         0.053460   \n",
              "bedrooms                                                                          0.164629   \n",
              "beds                                                                              0.152905   \n",
              "price                                                                             0.095163   \n",
              "review_scores_rating                                                              0.136427   \n",
              "review_scores_accuracy                                                            0.124812   \n",
              "review_scores_cleanliness                                                         0.109679   \n",
              "review_scores_checkin                                                             0.082840   \n",
              "review_scores_communication                                                       0.092507   \n",
              "review_scores_location                                                            0.051773   \n",
              "review_scores_value                                                               0.113484   \n",
              "reviews_per_month                                                                 0.001266   \n",
              "host_is_superhost                                                                 0.006086   \n",
              "room_type                                                                         0.347597   \n",
              "\n",
              "                                              calculated_host_listings_count_shared_rooms  \\\n",
              "scrape_id                                                                             NaN   \n",
              "host_id                                                                          0.041580   \n",
              "host_response_rate                                                               0.040359   \n",
              "host_listings_count                                                              0.030556   \n",
              "host_total_listings_count                                                        0.002002   \n",
              "latitude                                                                         0.047659   \n",
              "longitude                                                                        0.004837   \n",
              "accommodates                                                                     0.057116   \n",
              "minimum_nights                                                                   0.028618   \n",
              "maximum_nights                                                                   0.037339   \n",
              "minimum_minimum_nights                                                           0.024187   \n",
              "availability_60                                                                  0.070910   \n",
              "availability_90                                                                  0.068076   \n",
              "availability_365                                                                 0.022093   \n",
              "number_of_reviews                                                                0.035630   \n",
              "number_of_reviews_ltm                                                            0.039716   \n",
              "number_of_reviews_l30d                                                           0.032826   \n",
              "calculated_host_listings_count                                                   0.048062   \n",
              "calculated_host_listings_count_entire_homes                                      0.035358   \n",
              "calculated_host_listings_count_private_rooms                                     0.086750   \n",
              "calculated_host_listings_count_shared_rooms                                      1.000000   \n",
              "host_acceptance_rate                                                             0.009561   \n",
              "bathrooms                                                                        0.077841   \n",
              "bedrooms                                                                         0.057247   \n",
              "beds                                                                             0.029312   \n",
              "price                                                                            0.040148   \n",
              "review_scores_rating                                                             0.032234   \n",
              "review_scores_accuracy                                                           0.039320   \n",
              "review_scores_cleanliness                                                        0.040758   \n",
              "review_scores_checkin                                                            0.042909   \n",
              "review_scores_communication                                                      0.046467   \n",
              "review_scores_location                                                           0.019531   \n",
              "review_scores_value                                                              0.024906   \n",
              "reviews_per_month                                                                0.036888   \n",
              "host_is_superhost                                                                0.023825   \n",
              "room_type                                                                        0.247058   \n",
              "\n",
              "                                              host_acceptance_rate  bathrooms  \\\n",
              "scrape_id                                                      NaN        NaN   \n",
              "host_id                                                   0.056154   0.032261   \n",
              "host_response_rate                                        0.311305   0.009061   \n",
              "host_listings_count                                       0.074569   0.087734   \n",
              "host_total_listings_count                                 0.096864   0.053107   \n",
              "latitude                                                  0.071602   0.003536   \n",
              "longitude                                                 0.010687   0.092629   \n",
              "accommodates                                              0.119404   0.447894   \n",
              "minimum_nights                                            0.141321   0.035153   \n",
              "maximum_nights                                            0.050027   0.007215   \n",
              "minimum_minimum_nights                                    0.189496   0.034659   \n",
              "availability_60                                           0.034269   0.071658   \n",
              "availability_90                                           0.022589   0.069592   \n",
              "availability_365                                          0.011246   0.032717   \n",
              "number_of_reviews                                         0.210869   0.026459   \n",
              "number_of_reviews_ltm                                     0.272320   0.011701   \n",
              "number_of_reviews_l30d                                    0.209309   0.014557   \n",
              "calculated_host_listings_count                            0.053454   0.093919   \n",
              "calculated_host_listings_count_entire_homes               0.149809   0.063907   \n",
              "calculated_host_listings_count_private_rooms              0.025056   0.053460   \n",
              "calculated_host_listings_count_shared_rooms               0.009561   0.077841   \n",
              "host_acceptance_rate                                      1.000000   0.013557   \n",
              "bathrooms                                                 0.013557   1.000000   \n",
              "bedrooms                                                  0.028407   0.553479   \n",
              "beds                                                      0.070466   0.421878   \n",
              "price                                                     0.068331   0.384939   \n",
              "review_scores_rating                                      0.012180   0.035302   \n",
              "review_scores_accuracy                                    0.025128   0.026330   \n",
              "review_scores_cleanliness                                 0.033503   0.011215   \n",
              "review_scores_checkin                                     0.024699   0.007581   \n",
              "review_scores_communication                               0.024431   0.007436   \n",
              "review_scores_location                                    0.009653   0.055615   \n",
              "review_scores_value                                       0.004276   0.037818   \n",
              "reviews_per_month                                         0.243577   0.011522   \n",
              "host_is_superhost                                         0.241473   0.007939   \n",
              "room_type                                                 0.164532   0.104268   \n",
              "\n",
              "                                              bedrooms      beds     price  \\\n",
              "scrape_id                                          NaN       NaN       NaN   \n",
              "host_id                                       0.031531  0.042882  0.017918   \n",
              "host_response_rate                            0.024768  0.050746  0.000106   \n",
              "host_listings_count                           0.022955  0.022923  0.074632   \n",
              "host_total_listings_count                     0.000680  0.029494  0.080463   \n",
              "latitude                                      0.005168  0.011054  0.049648   \n",
              "longitude                                     0.033895  0.020037  0.127475   \n",
              "accommodates                                  0.691493  0.665378  0.367494   \n",
              "minimum_nights                                0.003079  0.020585  0.018795   \n",
              "maximum_nights                                0.011816  0.058703  0.010227   \n",
              "minimum_minimum_nights                        0.005692  0.021080  0.008360   \n",
              "availability_60                               0.117818  0.107770  0.010166   \n",
              "availability_90                               0.115858  0.100041  0.017350   \n",
              "availability_365                              0.070495  0.024701  0.008551   \n",
              "number_of_reviews                             0.006057  0.113194  0.049512   \n",
              "number_of_reviews_ltm                         0.024415  0.102902  0.054858   \n",
              "number_of_reviews_l30d                        0.017562  0.053157  0.054253   \n",
              "calculated_host_listings_count                0.009676  0.031534  0.044357   \n",
              "calculated_host_listings_count_entire_homes   0.068790  0.078210  0.095518   \n",
              "calculated_host_listings_count_private_rooms  0.164629  0.152905  0.095163   \n",
              "calculated_host_listings_count_shared_rooms   0.057247  0.029312  0.040148   \n",
              "host_acceptance_rate                          0.028407  0.070466  0.068331   \n",
              "bathrooms                                     0.553479  0.421878  0.384939   \n",
              "bedrooms                                      1.000000  0.608065  0.407135   \n",
              "beds                                          0.608065  1.000000  0.312032   \n",
              "price                                         0.407135  0.312032  1.000000   \n",
              "review_scores_rating                          0.047462  0.030638  0.061456   \n",
              "review_scores_accuracy                        0.040991  0.034936  0.059137   \n",
              "review_scores_cleanliness                     0.027150  0.024495  0.085894   \n",
              "review_scores_checkin                         0.022775  0.025415  0.041034   \n",
              "review_scores_communication                   0.032890  0.028759  0.026363   \n",
              "review_scores_location                        0.025891  0.015712  0.101315   \n",
              "review_scores_value                           0.054500  0.042196  0.028834   \n",
              "reviews_per_month                             0.022177  0.051552  0.033565   \n",
              "host_is_superhost                             0.027612  0.067059  0.043457   \n",
              "room_type                                     0.302140  0.268010  0.230922   \n",
              "\n",
              "                                              review_scores_rating  \\\n",
              "scrape_id                                                      NaN   \n",
              "host_id                                                   0.068387   \n",
              "host_response_rate                                        0.055260   \n",
              "host_listings_count                                       0.105681   \n",
              "host_total_listings_count                                 0.102633   \n",
              "latitude                                                  0.034015   \n",
              "longitude                                                 0.006168   \n",
              "accommodates                                              0.025788   \n",
              "minimum_nights                                            0.009726   \n",
              "maximum_nights                                            0.058042   \n",
              "minimum_minimum_nights                                    0.023122   \n",
              "availability_60                                           0.067441   \n",
              "availability_90                                           0.062091   \n",
              "availability_365                                          0.077299   \n",
              "number_of_reviews                                         0.022040   \n",
              "number_of_reviews_ltm                                     0.034970   \n",
              "number_of_reviews_l30d                                    0.039479   \n",
              "calculated_host_listings_count                            0.076046   \n",
              "calculated_host_listings_count_entire_homes               0.051478   \n",
              "calculated_host_listings_count_private_rooms              0.136427   \n",
              "calculated_host_listings_count_shared_rooms               0.032234   \n",
              "host_acceptance_rate                                      0.012180   \n",
              "bathrooms                                                 0.035302   \n",
              "bedrooms                                                  0.047462   \n",
              "beds                                                      0.030638   \n",
              "price                                                     0.061456   \n",
              "review_scores_rating                                      1.000000   \n",
              "review_scores_accuracy                                    0.674898   \n",
              "review_scores_cleanliness                                 0.597013   \n",
              "review_scores_checkin                                     0.525112   \n",
              "review_scores_communication                               0.567045   \n",
              "review_scores_location                                    0.353604   \n",
              "review_scores_value                                       0.690756   \n",
              "reviews_per_month                                         0.027155   \n",
              "host_is_superhost                                         0.218594   \n",
              "room_type                                                 0.026154   \n",
              "\n",
              "                                              review_scores_accuracy  \\\n",
              "scrape_id                                                        NaN   \n",
              "host_id                                                     0.081241   \n",
              "host_response_rate                                          0.065385   \n",
              "host_listings_count                                         0.092107   \n",
              "host_total_listings_count                                   0.084014   \n",
              "latitude                                                    0.023402   \n",
              "longitude                                                   0.005254   \n",
              "accommodates                                                0.036436   \n",
              "minimum_nights                                              0.003855   \n",
              "maximum_nights                                              0.037275   \n",
              "minimum_minimum_nights                                      0.006629   \n",
              "availability_60                                             0.077462   \n",
              "availability_90                                             0.070257   \n",
              "availability_365                                            0.080741   \n",
              "number_of_reviews                                           0.075481   \n",
              "number_of_reviews_ltm                                       0.067451   \n",
              "number_of_reviews_l30d                                      0.064175   \n",
              "calculated_host_listings_count                              0.053837   \n",
              "calculated_host_listings_count_entire_homes                 0.018086   \n",
              "calculated_host_listings_count_private_rooms                0.124812   \n",
              "calculated_host_listings_count_shared_rooms                 0.039320   \n",
              "host_acceptance_rate                                        0.025128   \n",
              "bathrooms                                                   0.026330   \n",
              "bedrooms                                                    0.040991   \n",
              "beds                                                        0.034936   \n",
              "price                                                       0.059137   \n",
              "review_scores_rating                                        0.674898   \n",
              "review_scores_accuracy                                      1.000000   \n",
              "review_scores_cleanliness                                   0.543825   \n",
              "review_scores_checkin                                       0.507148   \n",
              "review_scores_communication                                 0.538415   \n",
              "review_scores_location                                      0.354241   \n",
              "review_scores_value                                         0.637203   \n",
              "reviews_per_month                                           0.043395   \n",
              "host_is_superhost                                           0.208512   \n",
              "room_type                                                   0.060510   \n",
              "\n",
              "                                              review_scores_cleanliness  \\\n",
              "scrape_id                                                           NaN   \n",
              "host_id                                                        0.041617   \n",
              "host_response_rate                                             0.065079   \n",
              "host_listings_count                                            0.066282   \n",
              "host_total_listings_count                                      0.057035   \n",
              "latitude                                                       0.022979   \n",
              "longitude                                                      0.008617   \n",
              "accommodates                                                   0.025843   \n",
              "minimum_nights                                                 0.014101   \n",
              "maximum_nights                                                 0.043959   \n",
              "minimum_minimum_nights                                         0.006938   \n",
              "availability_60                                                0.051877   \n",
              "availability_90                                                0.047798   \n",
              "availability_365                                               0.057252   \n",
              "number_of_reviews                                              0.035423   \n",
              "number_of_reviews_ltm                                          0.040844   \n",
              "number_of_reviews_l30d                                         0.049972   \n",
              "calculated_host_listings_count                                 0.030272   \n",
              "calculated_host_listings_count_entire_homes                    0.004635   \n",
              "calculated_host_listings_count_private_rooms                   0.109679   \n",
              "calculated_host_listings_count_shared_rooms                    0.040758   \n",
              "host_acceptance_rate                                           0.033503   \n",
              "bathrooms                                                      0.011215   \n",
              "bedrooms                                                       0.027150   \n",
              "beds                                                           0.024495   \n",
              "price                                                          0.085894   \n",
              "review_scores_rating                                           0.597013   \n",
              "review_scores_accuracy                                         0.543825   \n",
              "review_scores_cleanliness                                      1.000000   \n",
              "review_scores_checkin                                          0.412457   \n",
              "review_scores_communication                                    0.438006   \n",
              "review_scores_location                                         0.290220   \n",
              "review_scores_value                                            0.542773   \n",
              "reviews_per_month                                              0.043536   \n",
              "host_is_superhost                                              0.211223   \n",
              "room_type                                                      0.044495   \n",
              "\n",
              "                                              review_scores_checkin  \\\n",
              "scrape_id                                                       NaN   \n",
              "host_id                                                    0.083153   \n",
              "host_response_rate                                         0.072651   \n",
              "host_listings_count                                        0.070940   \n",
              "host_total_listings_count                                  0.069795   \n",
              "latitude                                                   0.002037   \n",
              "longitude                                                  0.013586   \n",
              "accommodates                                               0.018514   \n",
              "minimum_nights                                             0.010177   \n",
              "maximum_nights                                             0.012715   \n",
              "minimum_minimum_nights                                     0.005832   \n",
              "availability_60                                            0.065129   \n",
              "availability_90                                            0.058484   \n",
              "availability_365                                           0.058474   \n",
              "number_of_reviews                                          0.097972   \n",
              "number_of_reviews_ltm                                      0.075672   \n",
              "number_of_reviews_l30d                                     0.063630   \n",
              "calculated_host_listings_count                             0.050565   \n",
              "calculated_host_listings_count_entire_homes                0.027904   \n",
              "calculated_host_listings_count_private_rooms               0.082840   \n",
              "calculated_host_listings_count_shared_rooms                0.042909   \n",
              "host_acceptance_rate                                       0.024699   \n",
              "bathrooms                                                  0.007581   \n",
              "bedrooms                                                   0.022775   \n",
              "beds                                                       0.025415   \n",
              "price                                                      0.041034   \n",
              "review_scores_rating                                       0.525112   \n",
              "review_scores_accuracy                                     0.507148   \n",
              "review_scores_cleanliness                                  0.412457   \n",
              "review_scores_checkin                                      1.000000   \n",
              "review_scores_communication                                0.565855   \n",
              "review_scores_location                                     0.381610   \n",
              "review_scores_value                                        0.474241   \n",
              "reviews_per_month                                          0.010693   \n",
              "host_is_superhost                                          0.191701   \n",
              "room_type                                                  0.054156   \n",
              "\n",
              "                                              review_scores_communication  \\\n",
              "scrape_id                                                             NaN   \n",
              "host_id                                                          0.093356   \n",
              "host_response_rate                                               0.103898   \n",
              "host_listings_count                                              0.105806   \n",
              "host_total_listings_count                                        0.117926   \n",
              "latitude                                                         0.030312   \n",
              "longitude                                                        0.011644   \n",
              "accommodates                                                     0.031031   \n",
              "minimum_nights                                                   0.032218   \n",
              "maximum_nights                                                   0.036135   \n",
              "minimum_minimum_nights                                           0.002269   \n",
              "availability_60                                                  0.070709   \n",
              "availability_90                                                  0.062277   \n",
              "availability_365                                                 0.069895   \n",
              "number_of_reviews                                                0.080916   \n",
              "number_of_reviews_ltm                                            0.079232   \n",
              "number_of_reviews_l30d                                           0.071812   \n",
              "calculated_host_listings_count                                   0.071185   \n",
              "calculated_host_listings_count_entire_homes                      0.046603   \n",
              "calculated_host_listings_count_private_rooms                     0.092507   \n",
              "calculated_host_listings_count_shared_rooms                      0.046467   \n",
              "host_acceptance_rate                                             0.024431   \n",
              "bathrooms                                                        0.007436   \n",
              "bedrooms                                                         0.032890   \n",
              "beds                                                             0.028759   \n",
              "price                                                            0.026363   \n",
              "review_scores_rating                                             0.567045   \n",
              "review_scores_accuracy                                           0.538415   \n",
              "review_scores_cleanliness                                        0.438006   \n",
              "review_scores_checkin                                            0.565855   \n",
              "review_scores_communication                                      1.000000   \n",
              "review_scores_location                                           0.330120   \n",
              "review_scores_value                                              0.528813   \n",
              "reviews_per_month                                                0.020641   \n",
              "host_is_superhost                                                0.216893   \n",
              "room_type                                                        0.051928   \n",
              "\n",
              "                                              review_scores_location  \\\n",
              "scrape_id                                                        NaN   \n",
              "host_id                                                     0.102562   \n",
              "host_response_rate                                          0.044546   \n",
              "host_listings_count                                         0.032861   \n",
              "host_total_listings_count                                   0.026661   \n",
              "latitude                                                    0.019723   \n",
              "longitude                                                   0.096174   \n",
              "accommodates                                                0.018167   \n",
              "minimum_nights                                              0.003152   \n",
              "maximum_nights                                              0.019347   \n",
              "minimum_minimum_nights                                      0.007688   \n",
              "availability_60                                             0.053134   \n",
              "availability_90                                             0.048903   \n",
              "availability_365                                            0.047560   \n",
              "number_of_reviews                                           0.051425   \n",
              "number_of_reviews_ltm                                       0.029089   \n",
              "number_of_reviews_l30d                                      0.029815   \n",
              "calculated_host_listings_count                              0.000246   \n",
              "calculated_host_listings_count_entire_homes                 0.008196   \n",
              "calculated_host_listings_count_private_rooms                0.051773   \n",
              "calculated_host_listings_count_shared_rooms                 0.019531   \n",
              "host_acceptance_rate                                        0.009653   \n",
              "bathrooms                                                   0.055615   \n",
              "bedrooms                                                    0.025891   \n",
              "beds                                                        0.015712   \n",
              "price                                                       0.101315   \n",
              "review_scores_rating                                        0.353604   \n",
              "review_scores_accuracy                                      0.354241   \n",
              "review_scores_cleanliness                                   0.290220   \n",
              "review_scores_checkin                                       0.381610   \n",
              "review_scores_communication                                 0.330120   \n",
              "review_scores_location                                      1.000000   \n",
              "review_scores_value                                         0.380573   \n",
              "reviews_per_month                                           0.043044   \n",
              "host_is_superhost                                           0.097689   \n",
              "room_type                                                   0.019221   \n",
              "\n",
              "                                              review_scores_value  \\\n",
              "scrape_id                                                     NaN   \n",
              "host_id                                                  0.072051   \n",
              "host_response_rate                                       0.062425   \n",
              "host_listings_count                                      0.114909   \n",
              "host_total_listings_count                                0.105635   \n",
              "latitude                                                 0.024525   \n",
              "longitude                                                0.003031   \n",
              "accommodates                                             0.044812   \n",
              "minimum_nights                                           0.018865   \n",
              "maximum_nights                                           0.037986   \n",
              "minimum_minimum_nights                                   0.004878   \n",
              "availability_60                                          0.089166   \n",
              "availability_90                                          0.082587   \n",
              "availability_365                                         0.091495   \n",
              "number_of_reviews                                        0.090259   \n",
              "number_of_reviews_ltm                                    0.089838   \n",
              "number_of_reviews_l30d                                   0.079456   \n",
              "calculated_host_listings_count                           0.079661   \n",
              "calculated_host_listings_count_entire_homes              0.051908   \n",
              "calculated_host_listings_count_private_rooms             0.113484   \n",
              "calculated_host_listings_count_shared_rooms              0.024906   \n",
              "host_acceptance_rate                                     0.004276   \n",
              "bathrooms                                                0.037818   \n",
              "bedrooms                                                 0.054500   \n",
              "beds                                                     0.042196   \n",
              "price                                                    0.028834   \n",
              "review_scores_rating                                     0.690756   \n",
              "review_scores_accuracy                                   0.637203   \n",
              "review_scores_cleanliness                                0.542773   \n",
              "review_scores_checkin                                    0.474241   \n",
              "review_scores_communication                              0.528813   \n",
              "review_scores_location                                   0.380573   \n",
              "review_scores_value                                      1.000000   \n",
              "reviews_per_month                                        0.050651   \n",
              "host_is_superhost                                        0.205119   \n",
              "room_type                                                0.010234   \n",
              "\n",
              "                                              reviews_per_month  \\\n",
              "scrape_id                                                   NaN   \n",
              "host_id                                                0.078959   \n",
              "host_response_rate                                     0.166419   \n",
              "host_listings_count                                    0.131283   \n",
              "host_total_listings_count                              0.112306   \n",
              "latitude                                               0.137884   \n",
              "longitude                                              0.079174   \n",
              "accommodates                                           0.127483   \n",
              "minimum_nights                                         0.128673   \n",
              "maximum_nights                                         0.033959   \n",
              "minimum_minimum_nights                                 0.131129   \n",
              "availability_60                                        0.061726   \n",
              "availability_90                                        0.080822   \n",
              "availability_365                                       0.065928   \n",
              "number_of_reviews                                      0.465150   \n",
              "number_of_reviews_ltm                                  0.731671   \n",
              "number_of_reviews_l30d                                 0.599801   \n",
              "calculated_host_listings_count                         0.186808   \n",
              "calculated_host_listings_count_entire_homes            0.222120   \n",
              "calculated_host_listings_count_private_rooms           0.001266   \n",
              "calculated_host_listings_count_shared_rooms            0.036888   \n",
              "host_acceptance_rate                                   0.243577   \n",
              "bathrooms                                              0.011522   \n",
              "bedrooms                                               0.022177   \n",
              "beds                                                   0.051552   \n",
              "price                                                  0.033565   \n",
              "review_scores_rating                                   0.027155   \n",
              "review_scores_accuracy                                 0.043395   \n",
              "review_scores_cleanliness                              0.043536   \n",
              "review_scores_checkin                                  0.010693   \n",
              "review_scores_communication                            0.020641   \n",
              "review_scores_location                                 0.043044   \n",
              "review_scores_value                                    0.050651   \n",
              "reviews_per_month                                      1.000000   \n",
              "host_is_superhost                                      0.202857   \n",
              "room_type                                              0.171868   \n",
              "\n",
              "                                              host_is_superhost  room_type  \n",
              "scrape_id                                                   NaN        NaN  \n",
              "host_id                                                0.077526   0.029127  \n",
              "host_response_rate                                     0.240062   0.133798  \n",
              "host_listings_count                                    0.090525   0.076024  \n",
              "host_total_listings_count                              0.009997   0.111042  \n",
              "latitude                                               0.033568   0.115890  \n",
              "longitude                                              0.027188   0.060082  \n",
              "accommodates                                           0.102857   0.439602  \n",
              "minimum_nights                                         0.104695   0.011029  \n",
              "maximum_nights                                         0.007010   0.052956  \n",
              "minimum_minimum_nights                                 0.089739   0.026653  \n",
              "availability_60                                        0.018289   0.097691  \n",
              "availability_90                                        0.007140   0.076976  \n",
              "availability_365                                       0.031756   0.013219  \n",
              "number_of_reviews                                      0.240164   0.164096  \n",
              "number_of_reviews_ltm                                  0.322853   0.213815  \n",
              "number_of_reviews_l30d                                 0.225695   0.164090  \n",
              "calculated_host_listings_count                         0.027800   0.067083  \n",
              "calculated_host_listings_count_entire_homes            0.067503   0.244157  \n",
              "calculated_host_listings_count_private_rooms           0.006086   0.347597  \n",
              "calculated_host_listings_count_shared_rooms            0.023825   0.247058  \n",
              "host_acceptance_rate                                   0.241473   0.164532  \n",
              "bathrooms                                              0.007939   0.104268  \n",
              "bedrooms                                               0.027612   0.302140  \n",
              "beds                                                   0.067059   0.268010  \n",
              "price                                                  0.043457   0.230922  \n",
              "review_scores_rating                                   0.218594   0.026154  \n",
              "review_scores_accuracy                                 0.208512   0.060510  \n",
              "review_scores_cleanliness                              0.211223   0.044495  \n",
              "review_scores_checkin                                  0.191701   0.054156  \n",
              "review_scores_communication                            0.216893   0.051928  \n",
              "review_scores_location                                 0.097689   0.019221  \n",
              "review_scores_value                                    0.205119   0.010234  \n",
              "reviews_per_month                                      0.202857   0.171868  \n",
              "host_is_superhost                                      1.000000   0.150888  \n",
              "room_type                                              0.150888   1.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-059e0c42-44d0-4576-a862-d827cae0cf3c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>scrape_id</th>\n",
              "      <th>host_id</th>\n",
              "      <th>host_response_rate</th>\n",
              "      <th>host_listings_count</th>\n",
              "      <th>host_total_listings_count</th>\n",
              "      <th>latitude</th>\n",
              "      <th>longitude</th>\n",
              "      <th>accommodates</th>\n",
              "      <th>minimum_nights</th>\n",
              "      <th>maximum_nights</th>\n",
              "      <th>minimum_minimum_nights</th>\n",
              "      <th>availability_60</th>\n",
              "      <th>availability_90</th>\n",
              "      <th>availability_365</th>\n",
              "      <th>number_of_reviews</th>\n",
              "      <th>number_of_reviews_ltm</th>\n",
              "      <th>number_of_reviews_l30d</th>\n",
              "      <th>calculated_host_listings_count</th>\n",
              "      <th>calculated_host_listings_count_entire_homes</th>\n",
              "      <th>calculated_host_listings_count_private_rooms</th>\n",
              "      <th>calculated_host_listings_count_shared_rooms</th>\n",
              "      <th>host_acceptance_rate</th>\n",
              "      <th>bathrooms</th>\n",
              "      <th>bedrooms</th>\n",
              "      <th>beds</th>\n",
              "      <th>price</th>\n",
              "      <th>review_scores_rating</th>\n",
              "      <th>review_scores_accuracy</th>\n",
              "      <th>review_scores_cleanliness</th>\n",
              "      <th>review_scores_checkin</th>\n",
              "      <th>review_scores_communication</th>\n",
              "      <th>review_scores_location</th>\n",
              "      <th>review_scores_value</th>\n",
              "      <th>reviews_per_month</th>\n",
              "      <th>host_is_superhost</th>\n",
              "      <th>room_type</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>scrape_id</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>host_id</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.021472</td>\n",
              "      <td>0.113428</td>\n",
              "      <td>0.137314</td>\n",
              "      <td>0.062082</td>\n",
              "      <td>0.065841</td>\n",
              "      <td>0.000482</td>\n",
              "      <td>0.018196</td>\n",
              "      <td>0.055268</td>\n",
              "      <td>0.101651</td>\n",
              "      <td>0.118073</td>\n",
              "      <td>0.117047</td>\n",
              "      <td>0.095507</td>\n",
              "      <td>0.182865</td>\n",
              "      <td>0.035150</td>\n",
              "      <td>0.018505</td>\n",
              "      <td>0.016482</td>\n",
              "      <td>0.029795</td>\n",
              "      <td>0.105943</td>\n",
              "      <td>0.041580</td>\n",
              "      <td>0.056154</td>\n",
              "      <td>0.032261</td>\n",
              "      <td>0.031531</td>\n",
              "      <td>0.042882</td>\n",
              "      <td>0.017918</td>\n",
              "      <td>0.068387</td>\n",
              "      <td>0.081241</td>\n",
              "      <td>0.041617</td>\n",
              "      <td>0.083153</td>\n",
              "      <td>0.093356</td>\n",
              "      <td>0.102562</td>\n",
              "      <td>0.072051</td>\n",
              "      <td>0.078959</td>\n",
              "      <td>0.077526</td>\n",
              "      <td>0.029127</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>host_response_rate</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.021472</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.074886</td>\n",
              "      <td>0.041225</td>\n",
              "      <td>0.024738</td>\n",
              "      <td>0.030740</td>\n",
              "      <td>0.086731</td>\n",
              "      <td>0.103761</td>\n",
              "      <td>0.004145</td>\n",
              "      <td>0.093961</td>\n",
              "      <td>0.005555</td>\n",
              "      <td>0.005843</td>\n",
              "      <td>0.014189</td>\n",
              "      <td>0.158784</td>\n",
              "      <td>0.217559</td>\n",
              "      <td>0.183309</td>\n",
              "      <td>0.064198</td>\n",
              "      <td>0.115303</td>\n",
              "      <td>0.014374</td>\n",
              "      <td>0.040359</td>\n",
              "      <td>0.311305</td>\n",
              "      <td>0.009061</td>\n",
              "      <td>0.024768</td>\n",
              "      <td>0.050746</td>\n",
              "      <td>0.000106</td>\n",
              "      <td>0.055260</td>\n",
              "      <td>0.065385</td>\n",
              "      <td>0.065079</td>\n",
              "      <td>0.072651</td>\n",
              "      <td>0.103898</td>\n",
              "      <td>0.044546</td>\n",
              "      <td>0.062425</td>\n",
              "      <td>0.166419</td>\n",
              "      <td>0.240062</td>\n",
              "      <td>0.133798</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>host_listings_count</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.113428</td>\n",
              "      <td>0.074886</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.718386</td>\n",
              "      <td>0.148908</td>\n",
              "      <td>0.053413</td>\n",
              "      <td>0.063836</td>\n",
              "      <td>0.008692</td>\n",
              "      <td>0.026395</td>\n",
              "      <td>0.028608</td>\n",
              "      <td>0.077801</td>\n",
              "      <td>0.088985</td>\n",
              "      <td>0.121436</td>\n",
              "      <td>0.007431</td>\n",
              "      <td>0.084818</td>\n",
              "      <td>0.116376</td>\n",
              "      <td>0.644709</td>\n",
              "      <td>0.547027</td>\n",
              "      <td>0.427874</td>\n",
              "      <td>0.030556</td>\n",
              "      <td>0.074569</td>\n",
              "      <td>0.087734</td>\n",
              "      <td>0.022955</td>\n",
              "      <td>0.022923</td>\n",
              "      <td>0.074632</td>\n",
              "      <td>0.105681</td>\n",
              "      <td>0.092107</td>\n",
              "      <td>0.066282</td>\n",
              "      <td>0.070940</td>\n",
              "      <td>0.105806</td>\n",
              "      <td>0.032861</td>\n",
              "      <td>0.114909</td>\n",
              "      <td>0.131283</td>\n",
              "      <td>0.090525</td>\n",
              "      <td>0.076024</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>host_total_listings_count</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.137314</td>\n",
              "      <td>0.041225</td>\n",
              "      <td>0.718386</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.129753</td>\n",
              "      <td>0.059585</td>\n",
              "      <td>0.058296</td>\n",
              "      <td>0.187803</td>\n",
              "      <td>0.129995</td>\n",
              "      <td>0.036290</td>\n",
              "      <td>0.056917</td>\n",
              "      <td>0.066005</td>\n",
              "      <td>0.142745</td>\n",
              "      <td>0.015221</td>\n",
              "      <td>0.059341</td>\n",
              "      <td>0.100977</td>\n",
              "      <td>0.535333</td>\n",
              "      <td>0.499771</td>\n",
              "      <td>0.277165</td>\n",
              "      <td>0.002002</td>\n",
              "      <td>0.096864</td>\n",
              "      <td>0.053107</td>\n",
              "      <td>0.000680</td>\n",
              "      <td>0.029494</td>\n",
              "      <td>0.080463</td>\n",
              "      <td>0.102633</td>\n",
              "      <td>0.084014</td>\n",
              "      <td>0.057035</td>\n",
              "      <td>0.069795</td>\n",
              "      <td>0.117926</td>\n",
              "      <td>0.026661</td>\n",
              "      <td>0.105635</td>\n",
              "      <td>0.112306</td>\n",
              "      <td>0.009997</td>\n",
              "      <td>0.111042</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>latitude</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.062082</td>\n",
              "      <td>0.024738</td>\n",
              "      <td>0.148908</td>\n",
              "      <td>0.129753</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.123540</td>\n",
              "      <td>0.086307</td>\n",
              "      <td>0.029481</td>\n",
              "      <td>0.030242</td>\n",
              "      <td>0.051972</td>\n",
              "      <td>0.057261</td>\n",
              "      <td>0.053181</td>\n",
              "      <td>0.024465</td>\n",
              "      <td>0.081044</td>\n",
              "      <td>0.122445</td>\n",
              "      <td>0.095120</td>\n",
              "      <td>0.146767</td>\n",
              "      <td>0.112787</td>\n",
              "      <td>0.003149</td>\n",
              "      <td>0.047659</td>\n",
              "      <td>0.071602</td>\n",
              "      <td>0.003536</td>\n",
              "      <td>0.005168</td>\n",
              "      <td>0.011054</td>\n",
              "      <td>0.049648</td>\n",
              "      <td>0.034015</td>\n",
              "      <td>0.023402</td>\n",
              "      <td>0.022979</td>\n",
              "      <td>0.002037</td>\n",
              "      <td>0.030312</td>\n",
              "      <td>0.019723</td>\n",
              "      <td>0.024525</td>\n",
              "      <td>0.137884</td>\n",
              "      <td>0.033568</td>\n",
              "      <td>0.115890</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>longitude</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.065841</td>\n",
              "      <td>0.030740</td>\n",
              "      <td>0.053413</td>\n",
              "      <td>0.059585</td>\n",
              "      <td>0.123540</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.006521</td>\n",
              "      <td>0.037008</td>\n",
              "      <td>0.030278</td>\n",
              "      <td>0.023120</td>\n",
              "      <td>0.035776</td>\n",
              "      <td>0.026600</td>\n",
              "      <td>0.003155</td>\n",
              "      <td>0.046774</td>\n",
              "      <td>0.063564</td>\n",
              "      <td>0.046313</td>\n",
              "      <td>0.041985</td>\n",
              "      <td>0.069198</td>\n",
              "      <td>0.027244</td>\n",
              "      <td>0.004837</td>\n",
              "      <td>0.010687</td>\n",
              "      <td>0.092629</td>\n",
              "      <td>0.033895</td>\n",
              "      <td>0.020037</td>\n",
              "      <td>0.127475</td>\n",
              "      <td>0.006168</td>\n",
              "      <td>0.005254</td>\n",
              "      <td>0.008617</td>\n",
              "      <td>0.013586</td>\n",
              "      <td>0.011644</td>\n",
              "      <td>0.096174</td>\n",
              "      <td>0.003031</td>\n",
              "      <td>0.079174</td>\n",
              "      <td>0.027188</td>\n",
              "      <td>0.060082</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>accommodates</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.000482</td>\n",
              "      <td>0.086731</td>\n",
              "      <td>0.063836</td>\n",
              "      <td>0.058296</td>\n",
              "      <td>0.086307</td>\n",
              "      <td>0.006521</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.065755</td>\n",
              "      <td>0.025036</td>\n",
              "      <td>0.073073</td>\n",
              "      <td>0.051279</td>\n",
              "      <td>0.038553</td>\n",
              "      <td>0.002981</td>\n",
              "      <td>0.103073</td>\n",
              "      <td>0.147557</td>\n",
              "      <td>0.105073</td>\n",
              "      <td>0.067243</td>\n",
              "      <td>0.138460</td>\n",
              "      <td>0.189391</td>\n",
              "      <td>0.057116</td>\n",
              "      <td>0.119404</td>\n",
              "      <td>0.447894</td>\n",
              "      <td>0.691493</td>\n",
              "      <td>0.665378</td>\n",
              "      <td>0.367494</td>\n",
              "      <td>0.025788</td>\n",
              "      <td>0.036436</td>\n",
              "      <td>0.025843</td>\n",
              "      <td>0.018514</td>\n",
              "      <td>0.031031</td>\n",
              "      <td>0.018167</td>\n",
              "      <td>0.044812</td>\n",
              "      <td>0.127483</td>\n",
              "      <td>0.102857</td>\n",
              "      <td>0.439602</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>minimum_nights</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.018196</td>\n",
              "      <td>0.103761</td>\n",
              "      <td>0.008692</td>\n",
              "      <td>0.187803</td>\n",
              "      <td>0.029481</td>\n",
              "      <td>0.037008</td>\n",
              "      <td>0.065755</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.035216</td>\n",
              "      <td>0.850200</td>\n",
              "      <td>0.036661</td>\n",
              "      <td>0.039527</td>\n",
              "      <td>0.007065</td>\n",
              "      <td>0.132686</td>\n",
              "      <td>0.169897</td>\n",
              "      <td>0.118383</td>\n",
              "      <td>0.005832</td>\n",
              "      <td>0.049867</td>\n",
              "      <td>0.082534</td>\n",
              "      <td>0.028618</td>\n",
              "      <td>0.141321</td>\n",
              "      <td>0.035153</td>\n",
              "      <td>0.003079</td>\n",
              "      <td>0.020585</td>\n",
              "      <td>0.018795</td>\n",
              "      <td>0.009726</td>\n",
              "      <td>0.003855</td>\n",
              "      <td>0.014101</td>\n",
              "      <td>0.010177</td>\n",
              "      <td>0.032218</td>\n",
              "      <td>0.003152</td>\n",
              "      <td>0.018865</td>\n",
              "      <td>0.128673</td>\n",
              "      <td>0.104695</td>\n",
              "      <td>0.011029</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>maximum_nights</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.055268</td>\n",
              "      <td>0.004145</td>\n",
              "      <td>0.026395</td>\n",
              "      <td>0.129995</td>\n",
              "      <td>0.030242</td>\n",
              "      <td>0.030278</td>\n",
              "      <td>0.025036</td>\n",
              "      <td>0.035216</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.020209</td>\n",
              "      <td>0.056507</td>\n",
              "      <td>0.050714</td>\n",
              "      <td>0.123046</td>\n",
              "      <td>0.130393</td>\n",
              "      <td>0.047431</td>\n",
              "      <td>0.003660</td>\n",
              "      <td>0.033598</td>\n",
              "      <td>0.010918</td>\n",
              "      <td>0.015520</td>\n",
              "      <td>0.037339</td>\n",
              "      <td>0.050027</td>\n",
              "      <td>0.007215</td>\n",
              "      <td>0.011816</td>\n",
              "      <td>0.058703</td>\n",
              "      <td>0.010227</td>\n",
              "      <td>0.058042</td>\n",
              "      <td>0.037275</td>\n",
              "      <td>0.043959</td>\n",
              "      <td>0.012715</td>\n",
              "      <td>0.036135</td>\n",
              "      <td>0.019347</td>\n",
              "      <td>0.037986</td>\n",
              "      <td>0.033959</td>\n",
              "      <td>0.007010</td>\n",
              "      <td>0.052956</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>minimum_minimum_nights</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.101651</td>\n",
              "      <td>0.093961</td>\n",
              "      <td>0.028608</td>\n",
              "      <td>0.036290</td>\n",
              "      <td>0.051972</td>\n",
              "      <td>0.023120</td>\n",
              "      <td>0.073073</td>\n",
              "      <td>0.850200</td>\n",
              "      <td>0.020209</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.048611</td>\n",
              "      <td>0.054522</td>\n",
              "      <td>0.047295</td>\n",
              "      <td>0.117505</td>\n",
              "      <td>0.164422</td>\n",
              "      <td>0.132459</td>\n",
              "      <td>0.006921</td>\n",
              "      <td>0.075778</td>\n",
              "      <td>0.064363</td>\n",
              "      <td>0.024187</td>\n",
              "      <td>0.189496</td>\n",
              "      <td>0.034659</td>\n",
              "      <td>0.005692</td>\n",
              "      <td>0.021080</td>\n",
              "      <td>0.008360</td>\n",
              "      <td>0.023122</td>\n",
              "      <td>0.006629</td>\n",
              "      <td>0.006938</td>\n",
              "      <td>0.005832</td>\n",
              "      <td>0.002269</td>\n",
              "      <td>0.007688</td>\n",
              "      <td>0.004878</td>\n",
              "      <td>0.131129</td>\n",
              "      <td>0.089739</td>\n",
              "      <td>0.026653</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>availability_60</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.118073</td>\n",
              "      <td>0.005555</td>\n",
              "      <td>0.077801</td>\n",
              "      <td>0.056917</td>\n",
              "      <td>0.057261</td>\n",
              "      <td>0.035776</td>\n",
              "      <td>0.051279</td>\n",
              "      <td>0.036661</td>\n",
              "      <td>0.056507</td>\n",
              "      <td>0.048611</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.973138</td>\n",
              "      <td>0.546986</td>\n",
              "      <td>0.024651</td>\n",
              "      <td>0.033154</td>\n",
              "      <td>0.051003</td>\n",
              "      <td>0.094189</td>\n",
              "      <td>0.047218</td>\n",
              "      <td>0.094506</td>\n",
              "      <td>0.070910</td>\n",
              "      <td>0.034269</td>\n",
              "      <td>0.071658</td>\n",
              "      <td>0.117818</td>\n",
              "      <td>0.107770</td>\n",
              "      <td>0.010166</td>\n",
              "      <td>0.067441</td>\n",
              "      <td>0.077462</td>\n",
              "      <td>0.051877</td>\n",
              "      <td>0.065129</td>\n",
              "      <td>0.070709</td>\n",
              "      <td>0.053134</td>\n",
              "      <td>0.089166</td>\n",
              "      <td>0.061726</td>\n",
              "      <td>0.018289</td>\n",
              "      <td>0.097691</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>availability_90</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.117047</td>\n",
              "      <td>0.005843</td>\n",
              "      <td>0.088985</td>\n",
              "      <td>0.066005</td>\n",
              "      <td>0.053181</td>\n",
              "      <td>0.026600</td>\n",
              "      <td>0.038553</td>\n",
              "      <td>0.039527</td>\n",
              "      <td>0.050714</td>\n",
              "      <td>0.054522</td>\n",
              "      <td>0.973138</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.597661</td>\n",
              "      <td>0.005138</td>\n",
              "      <td>0.062658</td>\n",
              "      <td>0.073699</td>\n",
              "      <td>0.101638</td>\n",
              "      <td>0.060382</td>\n",
              "      <td>0.092309</td>\n",
              "      <td>0.068076</td>\n",
              "      <td>0.022589</td>\n",
              "      <td>0.069592</td>\n",
              "      <td>0.115858</td>\n",
              "      <td>0.100041</td>\n",
              "      <td>0.017350</td>\n",
              "      <td>0.062091</td>\n",
              "      <td>0.070257</td>\n",
              "      <td>0.047798</td>\n",
              "      <td>0.058484</td>\n",
              "      <td>0.062277</td>\n",
              "      <td>0.048903</td>\n",
              "      <td>0.082587</td>\n",
              "      <td>0.080822</td>\n",
              "      <td>0.007140</td>\n",
              "      <td>0.076976</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>availability_365</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.095507</td>\n",
              "      <td>0.014189</td>\n",
              "      <td>0.121436</td>\n",
              "      <td>0.142745</td>\n",
              "      <td>0.024465</td>\n",
              "      <td>0.003155</td>\n",
              "      <td>0.002981</td>\n",
              "      <td>0.007065</td>\n",
              "      <td>0.123046</td>\n",
              "      <td>0.047295</td>\n",
              "      <td>0.546986</td>\n",
              "      <td>0.597661</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.026494</td>\n",
              "      <td>0.080289</td>\n",
              "      <td>0.080555</td>\n",
              "      <td>0.132917</td>\n",
              "      <td>0.108489</td>\n",
              "      <td>0.082502</td>\n",
              "      <td>0.022093</td>\n",
              "      <td>0.011246</td>\n",
              "      <td>0.032717</td>\n",
              "      <td>0.070495</td>\n",
              "      <td>0.024701</td>\n",
              "      <td>0.008551</td>\n",
              "      <td>0.077299</td>\n",
              "      <td>0.080741</td>\n",
              "      <td>0.057252</td>\n",
              "      <td>0.058474</td>\n",
              "      <td>0.069895</td>\n",
              "      <td>0.047560</td>\n",
              "      <td>0.091495</td>\n",
              "      <td>0.065928</td>\n",
              "      <td>0.031756</td>\n",
              "      <td>0.013219</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>number_of_reviews</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.182865</td>\n",
              "      <td>0.158784</td>\n",
              "      <td>0.007431</td>\n",
              "      <td>0.015221</td>\n",
              "      <td>0.081044</td>\n",
              "      <td>0.046774</td>\n",
              "      <td>0.103073</td>\n",
              "      <td>0.132686</td>\n",
              "      <td>0.130393</td>\n",
              "      <td>0.117505</td>\n",
              "      <td>0.024651</td>\n",
              "      <td>0.005138</td>\n",
              "      <td>0.026494</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.611917</td>\n",
              "      <td>0.367335</td>\n",
              "      <td>0.062745</td>\n",
              "      <td>0.103048</td>\n",
              "      <td>0.055162</td>\n",
              "      <td>0.035630</td>\n",
              "      <td>0.210869</td>\n",
              "      <td>0.026459</td>\n",
              "      <td>0.006057</td>\n",
              "      <td>0.113194</td>\n",
              "      <td>0.049512</td>\n",
              "      <td>0.022040</td>\n",
              "      <td>0.075481</td>\n",
              "      <td>0.035423</td>\n",
              "      <td>0.097972</td>\n",
              "      <td>0.080916</td>\n",
              "      <td>0.051425</td>\n",
              "      <td>0.090259</td>\n",
              "      <td>0.465150</td>\n",
              "      <td>0.240164</td>\n",
              "      <td>0.164096</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>number_of_reviews_ltm</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.035150</td>\n",
              "      <td>0.217559</td>\n",
              "      <td>0.084818</td>\n",
              "      <td>0.059341</td>\n",
              "      <td>0.122445</td>\n",
              "      <td>0.063564</td>\n",
              "      <td>0.147557</td>\n",
              "      <td>0.169897</td>\n",
              "      <td>0.047431</td>\n",
              "      <td>0.164422</td>\n",
              "      <td>0.033154</td>\n",
              "      <td>0.062658</td>\n",
              "      <td>0.080289</td>\n",
              "      <td>0.611917</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.610716</td>\n",
              "      <td>0.151234</td>\n",
              "      <td>0.200210</td>\n",
              "      <td>0.034116</td>\n",
              "      <td>0.039716</td>\n",
              "      <td>0.272320</td>\n",
              "      <td>0.011701</td>\n",
              "      <td>0.024415</td>\n",
              "      <td>0.102902</td>\n",
              "      <td>0.054858</td>\n",
              "      <td>0.034970</td>\n",
              "      <td>0.067451</td>\n",
              "      <td>0.040844</td>\n",
              "      <td>0.075672</td>\n",
              "      <td>0.079232</td>\n",
              "      <td>0.029089</td>\n",
              "      <td>0.089838</td>\n",
              "      <td>0.731671</td>\n",
              "      <td>0.322853</td>\n",
              "      <td>0.213815</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>number_of_reviews_l30d</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.018505</td>\n",
              "      <td>0.183309</td>\n",
              "      <td>0.116376</td>\n",
              "      <td>0.100977</td>\n",
              "      <td>0.095120</td>\n",
              "      <td>0.046313</td>\n",
              "      <td>0.105073</td>\n",
              "      <td>0.118383</td>\n",
              "      <td>0.003660</td>\n",
              "      <td>0.132459</td>\n",
              "      <td>0.051003</td>\n",
              "      <td>0.073699</td>\n",
              "      <td>0.080555</td>\n",
              "      <td>0.367335</td>\n",
              "      <td>0.610716</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.150406</td>\n",
              "      <td>0.187932</td>\n",
              "      <td>0.005318</td>\n",
              "      <td>0.032826</td>\n",
              "      <td>0.209309</td>\n",
              "      <td>0.014557</td>\n",
              "      <td>0.017562</td>\n",
              "      <td>0.053157</td>\n",
              "      <td>0.054253</td>\n",
              "      <td>0.039479</td>\n",
              "      <td>0.064175</td>\n",
              "      <td>0.049972</td>\n",
              "      <td>0.063630</td>\n",
              "      <td>0.071812</td>\n",
              "      <td>0.029815</td>\n",
              "      <td>0.079456</td>\n",
              "      <td>0.599801</td>\n",
              "      <td>0.225695</td>\n",
              "      <td>0.164090</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>calculated_host_listings_count</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.016482</td>\n",
              "      <td>0.064198</td>\n",
              "      <td>0.644709</td>\n",
              "      <td>0.535333</td>\n",
              "      <td>0.146767</td>\n",
              "      <td>0.041985</td>\n",
              "      <td>0.067243</td>\n",
              "      <td>0.005832</td>\n",
              "      <td>0.033598</td>\n",
              "      <td>0.006921</td>\n",
              "      <td>0.094189</td>\n",
              "      <td>0.101638</td>\n",
              "      <td>0.132917</td>\n",
              "      <td>0.062745</td>\n",
              "      <td>0.151234</td>\n",
              "      <td>0.150406</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.897941</td>\n",
              "      <td>0.152205</td>\n",
              "      <td>0.048062</td>\n",
              "      <td>0.053454</td>\n",
              "      <td>0.093919</td>\n",
              "      <td>0.009676</td>\n",
              "      <td>0.031534</td>\n",
              "      <td>0.044357</td>\n",
              "      <td>0.076046</td>\n",
              "      <td>0.053837</td>\n",
              "      <td>0.030272</td>\n",
              "      <td>0.050565</td>\n",
              "      <td>0.071185</td>\n",
              "      <td>0.000246</td>\n",
              "      <td>0.079661</td>\n",
              "      <td>0.186808</td>\n",
              "      <td>0.027800</td>\n",
              "      <td>0.067083</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>calculated_host_listings_count_entire_homes</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.029795</td>\n",
              "      <td>0.115303</td>\n",
              "      <td>0.547027</td>\n",
              "      <td>0.499771</td>\n",
              "      <td>0.112787</td>\n",
              "      <td>0.069198</td>\n",
              "      <td>0.138460</td>\n",
              "      <td>0.049867</td>\n",
              "      <td>0.010918</td>\n",
              "      <td>0.075778</td>\n",
              "      <td>0.047218</td>\n",
              "      <td>0.060382</td>\n",
              "      <td>0.108489</td>\n",
              "      <td>0.103048</td>\n",
              "      <td>0.200210</td>\n",
              "      <td>0.187932</td>\n",
              "      <td>0.897941</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.004970</td>\n",
              "      <td>0.035358</td>\n",
              "      <td>0.149809</td>\n",
              "      <td>0.063907</td>\n",
              "      <td>0.068790</td>\n",
              "      <td>0.078210</td>\n",
              "      <td>0.095518</td>\n",
              "      <td>0.051478</td>\n",
              "      <td>0.018086</td>\n",
              "      <td>0.004635</td>\n",
              "      <td>0.027904</td>\n",
              "      <td>0.046603</td>\n",
              "      <td>0.008196</td>\n",
              "      <td>0.051908</td>\n",
              "      <td>0.222120</td>\n",
              "      <td>0.067503</td>\n",
              "      <td>0.244157</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>calculated_host_listings_count_private_rooms</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.105943</td>\n",
              "      <td>0.014374</td>\n",
              "      <td>0.427874</td>\n",
              "      <td>0.277165</td>\n",
              "      <td>0.003149</td>\n",
              "      <td>0.027244</td>\n",
              "      <td>0.189391</td>\n",
              "      <td>0.082534</td>\n",
              "      <td>0.015520</td>\n",
              "      <td>0.064363</td>\n",
              "      <td>0.094506</td>\n",
              "      <td>0.092309</td>\n",
              "      <td>0.082502</td>\n",
              "      <td>0.055162</td>\n",
              "      <td>0.034116</td>\n",
              "      <td>0.005318</td>\n",
              "      <td>0.152205</td>\n",
              "      <td>0.004970</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.086750</td>\n",
              "      <td>0.025056</td>\n",
              "      <td>0.053460</td>\n",
              "      <td>0.164629</td>\n",
              "      <td>0.152905</td>\n",
              "      <td>0.095163</td>\n",
              "      <td>0.136427</td>\n",
              "      <td>0.124812</td>\n",
              "      <td>0.109679</td>\n",
              "      <td>0.082840</td>\n",
              "      <td>0.092507</td>\n",
              "      <td>0.051773</td>\n",
              "      <td>0.113484</td>\n",
              "      <td>0.001266</td>\n",
              "      <td>0.006086</td>\n",
              "      <td>0.347597</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>calculated_host_listings_count_shared_rooms</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.041580</td>\n",
              "      <td>0.040359</td>\n",
              "      <td>0.030556</td>\n",
              "      <td>0.002002</td>\n",
              "      <td>0.047659</td>\n",
              "      <td>0.004837</td>\n",
              "      <td>0.057116</td>\n",
              "      <td>0.028618</td>\n",
              "      <td>0.037339</td>\n",
              "      <td>0.024187</td>\n",
              "      <td>0.070910</td>\n",
              "      <td>0.068076</td>\n",
              "      <td>0.022093</td>\n",
              "      <td>0.035630</td>\n",
              "      <td>0.039716</td>\n",
              "      <td>0.032826</td>\n",
              "      <td>0.048062</td>\n",
              "      <td>0.035358</td>\n",
              "      <td>0.086750</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.009561</td>\n",
              "      <td>0.077841</td>\n",
              "      <td>0.057247</td>\n",
              "      <td>0.029312</td>\n",
              "      <td>0.040148</td>\n",
              "      <td>0.032234</td>\n",
              "      <td>0.039320</td>\n",
              "      <td>0.040758</td>\n",
              "      <td>0.042909</td>\n",
              "      <td>0.046467</td>\n",
              "      <td>0.019531</td>\n",
              "      <td>0.024906</td>\n",
              "      <td>0.036888</td>\n",
              "      <td>0.023825</td>\n",
              "      <td>0.247058</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>host_acceptance_rate</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.056154</td>\n",
              "      <td>0.311305</td>\n",
              "      <td>0.074569</td>\n",
              "      <td>0.096864</td>\n",
              "      <td>0.071602</td>\n",
              "      <td>0.010687</td>\n",
              "      <td>0.119404</td>\n",
              "      <td>0.141321</td>\n",
              "      <td>0.050027</td>\n",
              "      <td>0.189496</td>\n",
              "      <td>0.034269</td>\n",
              "      <td>0.022589</td>\n",
              "      <td>0.011246</td>\n",
              "      <td>0.210869</td>\n",
              "      <td>0.272320</td>\n",
              "      <td>0.209309</td>\n",
              "      <td>0.053454</td>\n",
              "      <td>0.149809</td>\n",
              "      <td>0.025056</td>\n",
              "      <td>0.009561</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.013557</td>\n",
              "      <td>0.028407</td>\n",
              "      <td>0.070466</td>\n",
              "      <td>0.068331</td>\n",
              "      <td>0.012180</td>\n",
              "      <td>0.025128</td>\n",
              "      <td>0.033503</td>\n",
              "      <td>0.024699</td>\n",
              "      <td>0.024431</td>\n",
              "      <td>0.009653</td>\n",
              "      <td>0.004276</td>\n",
              "      <td>0.243577</td>\n",
              "      <td>0.241473</td>\n",
              "      <td>0.164532</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>bathrooms</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.032261</td>\n",
              "      <td>0.009061</td>\n",
              "      <td>0.087734</td>\n",
              "      <td>0.053107</td>\n",
              "      <td>0.003536</td>\n",
              "      <td>0.092629</td>\n",
              "      <td>0.447894</td>\n",
              "      <td>0.035153</td>\n",
              "      <td>0.007215</td>\n",
              "      <td>0.034659</td>\n",
              "      <td>0.071658</td>\n",
              "      <td>0.069592</td>\n",
              "      <td>0.032717</td>\n",
              "      <td>0.026459</td>\n",
              "      <td>0.011701</td>\n",
              "      <td>0.014557</td>\n",
              "      <td>0.093919</td>\n",
              "      <td>0.063907</td>\n",
              "      <td>0.053460</td>\n",
              "      <td>0.077841</td>\n",
              "      <td>0.013557</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.553479</td>\n",
              "      <td>0.421878</td>\n",
              "      <td>0.384939</td>\n",
              "      <td>0.035302</td>\n",
              "      <td>0.026330</td>\n",
              "      <td>0.011215</td>\n",
              "      <td>0.007581</td>\n",
              "      <td>0.007436</td>\n",
              "      <td>0.055615</td>\n",
              "      <td>0.037818</td>\n",
              "      <td>0.011522</td>\n",
              "      <td>0.007939</td>\n",
              "      <td>0.104268</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>bedrooms</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.031531</td>\n",
              "      <td>0.024768</td>\n",
              "      <td>0.022955</td>\n",
              "      <td>0.000680</td>\n",
              "      <td>0.005168</td>\n",
              "      <td>0.033895</td>\n",
              "      <td>0.691493</td>\n",
              "      <td>0.003079</td>\n",
              "      <td>0.011816</td>\n",
              "      <td>0.005692</td>\n",
              "      <td>0.117818</td>\n",
              "      <td>0.115858</td>\n",
              "      <td>0.070495</td>\n",
              "      <td>0.006057</td>\n",
              "      <td>0.024415</td>\n",
              "      <td>0.017562</td>\n",
              "      <td>0.009676</td>\n",
              "      <td>0.068790</td>\n",
              "      <td>0.164629</td>\n",
              "      <td>0.057247</td>\n",
              "      <td>0.028407</td>\n",
              "      <td>0.553479</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.608065</td>\n",
              "      <td>0.407135</td>\n",
              "      <td>0.047462</td>\n",
              "      <td>0.040991</td>\n",
              "      <td>0.027150</td>\n",
              "      <td>0.022775</td>\n",
              "      <td>0.032890</td>\n",
              "      <td>0.025891</td>\n",
              "      <td>0.054500</td>\n",
              "      <td>0.022177</td>\n",
              "      <td>0.027612</td>\n",
              "      <td>0.302140</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>beds</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.042882</td>\n",
              "      <td>0.050746</td>\n",
              "      <td>0.022923</td>\n",
              "      <td>0.029494</td>\n",
              "      <td>0.011054</td>\n",
              "      <td>0.020037</td>\n",
              "      <td>0.665378</td>\n",
              "      <td>0.020585</td>\n",
              "      <td>0.058703</td>\n",
              "      <td>0.021080</td>\n",
              "      <td>0.107770</td>\n",
              "      <td>0.100041</td>\n",
              "      <td>0.024701</td>\n",
              "      <td>0.113194</td>\n",
              "      <td>0.102902</td>\n",
              "      <td>0.053157</td>\n",
              "      <td>0.031534</td>\n",
              "      <td>0.078210</td>\n",
              "      <td>0.152905</td>\n",
              "      <td>0.029312</td>\n",
              "      <td>0.070466</td>\n",
              "      <td>0.421878</td>\n",
              "      <td>0.608065</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.312032</td>\n",
              "      <td>0.030638</td>\n",
              "      <td>0.034936</td>\n",
              "      <td>0.024495</td>\n",
              "      <td>0.025415</td>\n",
              "      <td>0.028759</td>\n",
              "      <td>0.015712</td>\n",
              "      <td>0.042196</td>\n",
              "      <td>0.051552</td>\n",
              "      <td>0.067059</td>\n",
              "      <td>0.268010</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>price</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.017918</td>\n",
              "      <td>0.000106</td>\n",
              "      <td>0.074632</td>\n",
              "      <td>0.080463</td>\n",
              "      <td>0.049648</td>\n",
              "      <td>0.127475</td>\n",
              "      <td>0.367494</td>\n",
              "      <td>0.018795</td>\n",
              "      <td>0.010227</td>\n",
              "      <td>0.008360</td>\n",
              "      <td>0.010166</td>\n",
              "      <td>0.017350</td>\n",
              "      <td>0.008551</td>\n",
              "      <td>0.049512</td>\n",
              "      <td>0.054858</td>\n",
              "      <td>0.054253</td>\n",
              "      <td>0.044357</td>\n",
              "      <td>0.095518</td>\n",
              "      <td>0.095163</td>\n",
              "      <td>0.040148</td>\n",
              "      <td>0.068331</td>\n",
              "      <td>0.384939</td>\n",
              "      <td>0.407135</td>\n",
              "      <td>0.312032</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.061456</td>\n",
              "      <td>0.059137</td>\n",
              "      <td>0.085894</td>\n",
              "      <td>0.041034</td>\n",
              "      <td>0.026363</td>\n",
              "      <td>0.101315</td>\n",
              "      <td>0.028834</td>\n",
              "      <td>0.033565</td>\n",
              "      <td>0.043457</td>\n",
              "      <td>0.230922</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>review_scores_rating</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.068387</td>\n",
              "      <td>0.055260</td>\n",
              "      <td>0.105681</td>\n",
              "      <td>0.102633</td>\n",
              "      <td>0.034015</td>\n",
              "      <td>0.006168</td>\n",
              "      <td>0.025788</td>\n",
              "      <td>0.009726</td>\n",
              "      <td>0.058042</td>\n",
              "      <td>0.023122</td>\n",
              "      <td>0.067441</td>\n",
              "      <td>0.062091</td>\n",
              "      <td>0.077299</td>\n",
              "      <td>0.022040</td>\n",
              "      <td>0.034970</td>\n",
              "      <td>0.039479</td>\n",
              "      <td>0.076046</td>\n",
              "      <td>0.051478</td>\n",
              "      <td>0.136427</td>\n",
              "      <td>0.032234</td>\n",
              "      <td>0.012180</td>\n",
              "      <td>0.035302</td>\n",
              "      <td>0.047462</td>\n",
              "      <td>0.030638</td>\n",
              "      <td>0.061456</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.674898</td>\n",
              "      <td>0.597013</td>\n",
              "      <td>0.525112</td>\n",
              "      <td>0.567045</td>\n",
              "      <td>0.353604</td>\n",
              "      <td>0.690756</td>\n",
              "      <td>0.027155</td>\n",
              "      <td>0.218594</td>\n",
              "      <td>0.026154</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>review_scores_accuracy</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.081241</td>\n",
              "      <td>0.065385</td>\n",
              "      <td>0.092107</td>\n",
              "      <td>0.084014</td>\n",
              "      <td>0.023402</td>\n",
              "      <td>0.005254</td>\n",
              "      <td>0.036436</td>\n",
              "      <td>0.003855</td>\n",
              "      <td>0.037275</td>\n",
              "      <td>0.006629</td>\n",
              "      <td>0.077462</td>\n",
              "      <td>0.070257</td>\n",
              "      <td>0.080741</td>\n",
              "      <td>0.075481</td>\n",
              "      <td>0.067451</td>\n",
              "      <td>0.064175</td>\n",
              "      <td>0.053837</td>\n",
              "      <td>0.018086</td>\n",
              "      <td>0.124812</td>\n",
              "      <td>0.039320</td>\n",
              "      <td>0.025128</td>\n",
              "      <td>0.026330</td>\n",
              "      <td>0.040991</td>\n",
              "      <td>0.034936</td>\n",
              "      <td>0.059137</td>\n",
              "      <td>0.674898</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.543825</td>\n",
              "      <td>0.507148</td>\n",
              "      <td>0.538415</td>\n",
              "      <td>0.354241</td>\n",
              "      <td>0.637203</td>\n",
              "      <td>0.043395</td>\n",
              "      <td>0.208512</td>\n",
              "      <td>0.060510</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>review_scores_cleanliness</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.041617</td>\n",
              "      <td>0.065079</td>\n",
              "      <td>0.066282</td>\n",
              "      <td>0.057035</td>\n",
              "      <td>0.022979</td>\n",
              "      <td>0.008617</td>\n",
              "      <td>0.025843</td>\n",
              "      <td>0.014101</td>\n",
              "      <td>0.043959</td>\n",
              "      <td>0.006938</td>\n",
              "      <td>0.051877</td>\n",
              "      <td>0.047798</td>\n",
              "      <td>0.057252</td>\n",
              "      <td>0.035423</td>\n",
              "      <td>0.040844</td>\n",
              "      <td>0.049972</td>\n",
              "      <td>0.030272</td>\n",
              "      <td>0.004635</td>\n",
              "      <td>0.109679</td>\n",
              "      <td>0.040758</td>\n",
              "      <td>0.033503</td>\n",
              "      <td>0.011215</td>\n",
              "      <td>0.027150</td>\n",
              "      <td>0.024495</td>\n",
              "      <td>0.085894</td>\n",
              "      <td>0.597013</td>\n",
              "      <td>0.543825</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.412457</td>\n",
              "      <td>0.438006</td>\n",
              "      <td>0.290220</td>\n",
              "      <td>0.542773</td>\n",
              "      <td>0.043536</td>\n",
              "      <td>0.211223</td>\n",
              "      <td>0.044495</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>review_scores_checkin</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.083153</td>\n",
              "      <td>0.072651</td>\n",
              "      <td>0.070940</td>\n",
              "      <td>0.069795</td>\n",
              "      <td>0.002037</td>\n",
              "      <td>0.013586</td>\n",
              "      <td>0.018514</td>\n",
              "      <td>0.010177</td>\n",
              "      <td>0.012715</td>\n",
              "      <td>0.005832</td>\n",
              "      <td>0.065129</td>\n",
              "      <td>0.058484</td>\n",
              "      <td>0.058474</td>\n",
              "      <td>0.097972</td>\n",
              "      <td>0.075672</td>\n",
              "      <td>0.063630</td>\n",
              "      <td>0.050565</td>\n",
              "      <td>0.027904</td>\n",
              "      <td>0.082840</td>\n",
              "      <td>0.042909</td>\n",
              "      <td>0.024699</td>\n",
              "      <td>0.007581</td>\n",
              "      <td>0.022775</td>\n",
              "      <td>0.025415</td>\n",
              "      <td>0.041034</td>\n",
              "      <td>0.525112</td>\n",
              "      <td>0.507148</td>\n",
              "      <td>0.412457</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.565855</td>\n",
              "      <td>0.381610</td>\n",
              "      <td>0.474241</td>\n",
              "      <td>0.010693</td>\n",
              "      <td>0.191701</td>\n",
              "      <td>0.054156</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>review_scores_communication</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.093356</td>\n",
              "      <td>0.103898</td>\n",
              "      <td>0.105806</td>\n",
              "      <td>0.117926</td>\n",
              "      <td>0.030312</td>\n",
              "      <td>0.011644</td>\n",
              "      <td>0.031031</td>\n",
              "      <td>0.032218</td>\n",
              "      <td>0.036135</td>\n",
              "      <td>0.002269</td>\n",
              "      <td>0.070709</td>\n",
              "      <td>0.062277</td>\n",
              "      <td>0.069895</td>\n",
              "      <td>0.080916</td>\n",
              "      <td>0.079232</td>\n",
              "      <td>0.071812</td>\n",
              "      <td>0.071185</td>\n",
              "      <td>0.046603</td>\n",
              "      <td>0.092507</td>\n",
              "      <td>0.046467</td>\n",
              "      <td>0.024431</td>\n",
              "      <td>0.007436</td>\n",
              "      <td>0.032890</td>\n",
              "      <td>0.028759</td>\n",
              "      <td>0.026363</td>\n",
              "      <td>0.567045</td>\n",
              "      <td>0.538415</td>\n",
              "      <td>0.438006</td>\n",
              "      <td>0.565855</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.330120</td>\n",
              "      <td>0.528813</td>\n",
              "      <td>0.020641</td>\n",
              "      <td>0.216893</td>\n",
              "      <td>0.051928</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>review_scores_location</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.102562</td>\n",
              "      <td>0.044546</td>\n",
              "      <td>0.032861</td>\n",
              "      <td>0.026661</td>\n",
              "      <td>0.019723</td>\n",
              "      <td>0.096174</td>\n",
              "      <td>0.018167</td>\n",
              "      <td>0.003152</td>\n",
              "      <td>0.019347</td>\n",
              "      <td>0.007688</td>\n",
              "      <td>0.053134</td>\n",
              "      <td>0.048903</td>\n",
              "      <td>0.047560</td>\n",
              "      <td>0.051425</td>\n",
              "      <td>0.029089</td>\n",
              "      <td>0.029815</td>\n",
              "      <td>0.000246</td>\n",
              "      <td>0.008196</td>\n",
              "      <td>0.051773</td>\n",
              "      <td>0.019531</td>\n",
              "      <td>0.009653</td>\n",
              "      <td>0.055615</td>\n",
              "      <td>0.025891</td>\n",
              "      <td>0.015712</td>\n",
              "      <td>0.101315</td>\n",
              "      <td>0.353604</td>\n",
              "      <td>0.354241</td>\n",
              "      <td>0.290220</td>\n",
              "      <td>0.381610</td>\n",
              "      <td>0.330120</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.380573</td>\n",
              "      <td>0.043044</td>\n",
              "      <td>0.097689</td>\n",
              "      <td>0.019221</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>review_scores_value</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.072051</td>\n",
              "      <td>0.062425</td>\n",
              "      <td>0.114909</td>\n",
              "      <td>0.105635</td>\n",
              "      <td>0.024525</td>\n",
              "      <td>0.003031</td>\n",
              "      <td>0.044812</td>\n",
              "      <td>0.018865</td>\n",
              "      <td>0.037986</td>\n",
              "      <td>0.004878</td>\n",
              "      <td>0.089166</td>\n",
              "      <td>0.082587</td>\n",
              "      <td>0.091495</td>\n",
              "      <td>0.090259</td>\n",
              "      <td>0.089838</td>\n",
              "      <td>0.079456</td>\n",
              "      <td>0.079661</td>\n",
              "      <td>0.051908</td>\n",
              "      <td>0.113484</td>\n",
              "      <td>0.024906</td>\n",
              "      <td>0.004276</td>\n",
              "      <td>0.037818</td>\n",
              "      <td>0.054500</td>\n",
              "      <td>0.042196</td>\n",
              "      <td>0.028834</td>\n",
              "      <td>0.690756</td>\n",
              "      <td>0.637203</td>\n",
              "      <td>0.542773</td>\n",
              "      <td>0.474241</td>\n",
              "      <td>0.528813</td>\n",
              "      <td>0.380573</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.050651</td>\n",
              "      <td>0.205119</td>\n",
              "      <td>0.010234</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>reviews_per_month</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.078959</td>\n",
              "      <td>0.166419</td>\n",
              "      <td>0.131283</td>\n",
              "      <td>0.112306</td>\n",
              "      <td>0.137884</td>\n",
              "      <td>0.079174</td>\n",
              "      <td>0.127483</td>\n",
              "      <td>0.128673</td>\n",
              "      <td>0.033959</td>\n",
              "      <td>0.131129</td>\n",
              "      <td>0.061726</td>\n",
              "      <td>0.080822</td>\n",
              "      <td>0.065928</td>\n",
              "      <td>0.465150</td>\n",
              "      <td>0.731671</td>\n",
              "      <td>0.599801</td>\n",
              "      <td>0.186808</td>\n",
              "      <td>0.222120</td>\n",
              "      <td>0.001266</td>\n",
              "      <td>0.036888</td>\n",
              "      <td>0.243577</td>\n",
              "      <td>0.011522</td>\n",
              "      <td>0.022177</td>\n",
              "      <td>0.051552</td>\n",
              "      <td>0.033565</td>\n",
              "      <td>0.027155</td>\n",
              "      <td>0.043395</td>\n",
              "      <td>0.043536</td>\n",
              "      <td>0.010693</td>\n",
              "      <td>0.020641</td>\n",
              "      <td>0.043044</td>\n",
              "      <td>0.050651</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.202857</td>\n",
              "      <td>0.171868</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>host_is_superhost</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.077526</td>\n",
              "      <td>0.240062</td>\n",
              "      <td>0.090525</td>\n",
              "      <td>0.009997</td>\n",
              "      <td>0.033568</td>\n",
              "      <td>0.027188</td>\n",
              "      <td>0.102857</td>\n",
              "      <td>0.104695</td>\n",
              "      <td>0.007010</td>\n",
              "      <td>0.089739</td>\n",
              "      <td>0.018289</td>\n",
              "      <td>0.007140</td>\n",
              "      <td>0.031756</td>\n",
              "      <td>0.240164</td>\n",
              "      <td>0.322853</td>\n",
              "      <td>0.225695</td>\n",
              "      <td>0.027800</td>\n",
              "      <td>0.067503</td>\n",
              "      <td>0.006086</td>\n",
              "      <td>0.023825</td>\n",
              "      <td>0.241473</td>\n",
              "      <td>0.007939</td>\n",
              "      <td>0.027612</td>\n",
              "      <td>0.067059</td>\n",
              "      <td>0.043457</td>\n",
              "      <td>0.218594</td>\n",
              "      <td>0.208512</td>\n",
              "      <td>0.211223</td>\n",
              "      <td>0.191701</td>\n",
              "      <td>0.216893</td>\n",
              "      <td>0.097689</td>\n",
              "      <td>0.205119</td>\n",
              "      <td>0.202857</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.150888</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>room_type</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.029127</td>\n",
              "      <td>0.133798</td>\n",
              "      <td>0.076024</td>\n",
              "      <td>0.111042</td>\n",
              "      <td>0.115890</td>\n",
              "      <td>0.060082</td>\n",
              "      <td>0.439602</td>\n",
              "      <td>0.011029</td>\n",
              "      <td>0.052956</td>\n",
              "      <td>0.026653</td>\n",
              "      <td>0.097691</td>\n",
              "      <td>0.076976</td>\n",
              "      <td>0.013219</td>\n",
              "      <td>0.164096</td>\n",
              "      <td>0.213815</td>\n",
              "      <td>0.164090</td>\n",
              "      <td>0.067083</td>\n",
              "      <td>0.244157</td>\n",
              "      <td>0.347597</td>\n",
              "      <td>0.247058</td>\n",
              "      <td>0.164532</td>\n",
              "      <td>0.104268</td>\n",
              "      <td>0.302140</td>\n",
              "      <td>0.268010</td>\n",
              "      <td>0.230922</td>\n",
              "      <td>0.026154</td>\n",
              "      <td>0.060510</td>\n",
              "      <td>0.044495</td>\n",
              "      <td>0.054156</td>\n",
              "      <td>0.051928</td>\n",
              "      <td>0.019221</td>\n",
              "      <td>0.010234</td>\n",
              "      <td>0.171868</td>\n",
              "      <td>0.150888</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-059e0c42-44d0-4576-a862-d827cae0cf3c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-059e0c42-44d0-4576-a862-d827cae0cf3c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-059e0c42-44d0-4576-a862-d827cae0cf3c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-97760361-cbb1-403a-88e4-23bde677d7db\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-97760361-cbb1-403a-88e4-23bde677d7db')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-97760361-cbb1-403a-88e4-23bde677d7db button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_688771e3-43e2-4b72-8016-ea7eb3475ef4\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('Corre_Factors')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_688771e3-43e2-4b72-8016-ea7eb3475ef4 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('Corre_Factors');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "Corre_Factors"
            }
          },
          "metadata": {},
          "execution_count": 74
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Ajustar maximo de columnas\n",
        "pd.options.display.max_columns = None"
      ],
      "metadata": {
        "id": "Mnq1RO0Q0bkX"
      },
      "execution_count": 92,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Heat_Map = sns.heatmap(Corre_Factors, cmap = 'Reds', annot= False, fmt= \".2f\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 737
        },
        "id": "TCcVq_qAMhVc",
        "outputId": "158e8f71-4037-41f7-a9ae-94fe6260a1fe"
      },
      "execution_count": 93,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 2 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Declaramos las variables dependientes e independientes para la regresión lineal\n",
        "#Vars_indep = df[['alcohol', 'speding']]\n",
        "Vars_indep = df[['host_response_rate', 'number_of_reviews_ltm', 'reviews_per_month']]\n",
        "Vars_dep = df['host_acceptance_rate']"
      ],
      "metadata": {
        "id": "lTjXT-i1NLrs"
      },
      "execution_count": 94,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Se define model como la función de regresión lineal\n",
        "from sklearn.linear_model import LinearRegression\n",
        "model = LinearRegression()"
      ],
      "metadata": {
        "id": "7KPFqM2Oy09B"
      },
      "execution_count": 95,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Ajustar el modelo con las variables antes declaradas\n",
        "model.fit(X=Vars_indep, y=Vars_dep)"
      ],
      "metadata": {
        "id": "BKuyuE4T41Ri",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 80
        },
        "outputId": "6eb93cef-6901-436d-b5e2-002f9486a71b"
      },
      "execution_count": 96,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinearRegression()"
            ],
            "text/html": [
              "<style>#sk-container-id-4 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: black;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-4 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-4 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-4 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-4 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-4 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: block;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-4 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-4 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-4 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-4 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-4 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-4 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 1ex;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-4 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-4 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;LinearRegression<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.LinearRegression.html\">?<span>Documentation for LinearRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>LinearRegression()</pre></div> </div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 96
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Verificamos los coeficientes obtenidos para el modelo ajustado\n",
        "model.__dict__\n"
      ],
      "metadata": {
        "id": "oyS9B-2q44Oi",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "bed06675-ab91-4a41-cdcc-2327d8da048a"
      },
      "execution_count": 97,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'fit_intercept': True,\n",
              " 'copy_X': True,\n",
              " 'n_jobs': None,\n",
              " 'positive': False,\n",
              " 'feature_names_in_': array(['host_response_rate', 'number_of_reviews_ltm', 'reviews_per_month'],\n",
              "       dtype=object),\n",
              " 'n_features_in_': 3,\n",
              " 'coef_': array([0.47766315, 0.11841704, 0.86129384]),\n",
              " 'rank_': 3,\n",
              " 'singular_': array([2532.8164814 , 1077.67007024,  144.91871219]),\n",
              " 'intercept_': 44.28280267154168}"
            ]
          },
          "metadata": {},
          "execution_count": 97
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Predecciomso los valores del total de accidentes a partir de las variables: \"alcohol\", \"speeding\", y \"no_previous\"\n",
        "y_pred = model.predict(X=df[['host_response_rate', 'number_of_reviews_ltm', 'reviews_per_month']])\n",
        "y_pred"
      ],
      "metadata": {
        "id": "doqcIH_946VT",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "75598e13-0b75-477e-9275-dbe3406681fc"
      },
      "execution_count": 98,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([92.75749933, 90.79063732, 92.41086116, ..., 93.51331728,\n",
              "       93.51331728, 93.51331728])"
            ]
          },
          "metadata": {},
          "execution_count": 98
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Corroboramos cual es el coficiente de Dterminación de nuestro modelo\n",
        "coef_Deter=model.score(Vars_indep,Vars_dep)\n",
        "coef_Deter"
      ],
      "metadata": {
        "id": "eAgJNmRM5Ay5",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a1746339-8283-45a4-9c05-b5aacf54f03f"
      },
      "execution_count": 99,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.14472076607751072"
            ]
          },
          "metadata": {},
          "execution_count": 99
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Corroboramos cual es el coeficiente de Determinación de nuestro modelo\n",
        "coef_Correl=np.sqrt(coef_Deter)\n",
        "coef_Correl"
      ],
      "metadata": {
        "id": "qW-ctjQi5E4v",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d10a5762-d5ff-4e83-f772-25d6e9e1be17"
      },
      "execution_count": 100,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.38042182649988776"
            ]
          },
          "metadata": {},
          "execution_count": 100
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Declaramos las variables dependientes e independientes para la regresión lineal\n",
        "#Vars_indep = df[['alcohol', 'speding']]\n",
        "Vars_indep = df[['number_of_reviews', 'number_of_reviews_ltm', 'number_of_reviews_l30d']]\n",
        "Vars_dep = df['host_is_superhost']"
      ],
      "metadata": {
        "id": "0Rbrkr1C5H__"
      },
      "execution_count": 101,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Se define model como la función de regresión lineal\n",
        "from sklearn.linear_model import LinearRegression\n",
        "model = LinearRegression()"
      ],
      "metadata": {
        "id": "HIZVC2OZ5VIA"
      },
      "execution_count": 102,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Ajustar el modelo con las variables antes declaradas\n",
        "model.fit(X=Vars_indep, y=Vars_dep)"
      ],
      "metadata": {
        "id": "YjB863nP8-Yi",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 80
        },
        "outputId": "b24356ff-7eca-45d0-f881-62c358c6e814"
      },
      "execution_count": 103,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinearRegression()"
            ],
            "text/html": [
              "<style>#sk-container-id-5 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: black;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-5 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-5 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-5 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-5 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-5 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: block;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-5 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-5 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-5 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-5 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-5 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-5 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 1ex;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-5 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-5 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" checked><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;LinearRegression<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.LinearRegression.html\">?<span>Documentation for LinearRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>LinearRegression()</pre></div> </div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 103
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Verificamos los coeficientes obtenidos para el modelo ajustado\n",
        "model.__dict__\n"
      ],
      "metadata": {
        "id": "HaNhD2-N8-iN",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "73044593-0f8a-4162-b9a1-30bb59b75d2e"
      },
      "execution_count": 104,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'fit_intercept': True,\n",
              " 'copy_X': True,\n",
              " 'n_jobs': None,\n",
              " 'positive': False,\n",
              " 'feature_names_in_': array(['number_of_reviews', 'number_of_reviews_ltm',\n",
              "        'number_of_reviews_l30d'], dtype=object),\n",
              " 'n_features_in_': 3,\n",
              " 'coef_': array([0.00067998, 0.00794707, 0.01748805]),\n",
              " 'rank_': 3,\n",
              " 'singular_': array([8130.19945434, 1952.49764927,  165.11352928]),\n",
              " 'intercept_': 0.24573573781670358}"
            ]
          },
          "metadata": {},
          "execution_count": 104
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Predecciomso los valores del total de accidentes a partir de las variables: \"alcohol\", \"speeding\", y \"no_previous\"\n",
        "y_pred = model.predict(X=df[['number_of_reviews', 'number_of_reviews_ltm', 'number_of_reviews_l30d']])\n",
        "y_pred"
      ],
      "metadata": {
        "id": "SBVyNuf58-kv",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3de27b0a-2918-4d39-8a78-ab303087867a"
      },
      "execution_count": 105,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0.30765592, 0.24573574, 0.28925457, ..., 0.24573574, 0.24573574,\n",
              "       0.24573574])"
            ]
          },
          "metadata": {},
          "execution_count": 105
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Corroboramos cual es el coficiente de Dterminación de nuestro modelo\n",
        "coef_Deter=model.score(Vars_indep,Vars_dep)\n",
        "coef_Deter"
      ],
      "metadata": {
        "id": "3E3kA1fE8-q8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7f6e2fdc-1805-49f5-b1fa-76673090108e"
      },
      "execution_count": 106,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.1084733572439629"
            ]
          },
          "metadata": {},
          "execution_count": 106
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Corroboramos cual es el coeficiente de Determinación de nuestro modelo\n",
        "coef_Correl=np.sqrt(coef_Deter)\n",
        "coef_Correl"
      ],
      "metadata": {
        "id": "oT_DVh4Y9E_z",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0418d2e5-5619-4e46-882a-08bbc15c7028"
      },
      "execution_count": 107,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.32935293720257436"
            ]
          },
          "metadata": {},
          "execution_count": 107
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Declaramos las variables dependientes e independientes para la regresión lineal\n",
        "#Vars_indep = df[['alcohol', 'speding']]\n",
        "Vars_indep = df[['host_listings_count', 'calculated_host_listings_count', 'calculated_host_listings_count_entire_homes']]\n",
        "Vars_dep = df['host_total_listings_count']"
      ],
      "metadata": {
        "id": "0KC-5HSby1G6"
      },
      "execution_count": 108,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Se define model como la función de regresión lineal\n",
        "from sklearn.linear_model import LinearRegression\n",
        "model = LinearRegression()"
      ],
      "metadata": {
        "id": "Lk6m7B3a1jWu"
      },
      "execution_count": 109,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Ajustar el modelo con las variables antes declaradas\n",
        "model.fit(X=Vars_indep, y=Vars_dep)"
      ],
      "metadata": {
        "id": "cAUUfwHM196Y",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 80
        },
        "outputId": "4199dc80-a485-4b16-95bd-dd85441271d7"
      },
      "execution_count": 110,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinearRegression()"
            ],
            "text/html": [
              "<style>#sk-container-id-6 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: black;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-6 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-6 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-6 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-6 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-6 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: block;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-6 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-6 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-6 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-6 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-6 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-6 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-6 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 1ex;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-6 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-6 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-6\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" checked><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;LinearRegression<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.LinearRegression.html\">?<span>Documentation for LinearRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>LinearRegression()</pre></div> </div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 110
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Verificamos los coeficientes obtenidos para el modelo ajustado\n",
        "model.__dict__\n"
      ],
      "metadata": {
        "id": "gkFFklf02BbP",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0278b836-5934-4d82-e2d0-98f1bac915e1"
      },
      "execution_count": 111,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'fit_intercept': True,\n",
              " 'copy_X': True,\n",
              " 'n_jobs': None,\n",
              " 'positive': False,\n",
              " 'feature_names_in_': array(['host_listings_count', 'calculated_host_listings_count',\n",
              "        'calculated_host_listings_count_entire_homes'], dtype=object),\n",
              " 'n_features_in_': 3,\n",
              " 'coef_': array([ 1.24101598, -0.18000131,  0.59041535]),\n",
              " 'rank_': 3,\n",
              " 'singular_': array([5955.1432578 , 2909.06308332, 1017.16311693]),\n",
              " 'intercept_': 2.145790924719165}"
            ]
          },
          "metadata": {},
          "execution_count": 111
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Modelo y = 1.24101598x -0.18000131x +  0.59041535x + 2.145790924719165"
      ],
      "metadata": {
        "id": "f00MN4BwoGQR"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Predecciomso los valores del total de accidentes a partir de las variables: \"alcohol\", \"speeding\", y \"no_previous\"\n",
        "y_pred = model.predict(X=df[['host_listings_count', 'calculated_host_listings_count', 'calculated_host_listings_count_entire_homes']])\n",
        "y_pred"
      ],
      "metadata": {
        "id": "55F2ilgJ2Cf9",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "484e9487-eecc-478a-8d42-786a5e0c96ed"
      },
      "execution_count": 117,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([  6.50966566,   3.79722096,  23.26470707, ...,  17.44839677,\n",
              "         7.10008102, 202.02351685])"
            ]
          },
          "metadata": {},
          "execution_count": 117
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.insert(0, 'predicciones', y_pred)\n"
      ],
      "metadata": {
        "id": "y_DIHRnlqDEr",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 274
        },
        "outputId": "cb70da90-fbbc-48d4-8e00-7abdbe39b154"
      },
      "execution_count": 118,
      "outputs": [
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "cannot insert predicciones, already exists",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-118-4895c6bc16b4>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minsert\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'predicciones'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_pred\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36minsert\u001b[0;34m(self, loc, column, value, allow_duplicates)\u001b[0m\n\u001b[1;32m   5156\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mallow_duplicates\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mcolumn\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5157\u001b[0m             \u001b[0;31m# Should this be a different kind of error??\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5158\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"cannot insert {column}, already exists\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5159\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mis_integer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mloc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5160\u001b[0m             \u001b[0;32mraise\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"loc must be int\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mValueError\u001b[0m: cannot insert predicciones, already exists"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Corroboramos cual es el coficiente de Dterminación de nuestro modelo\n",
        "coef_Deter=model.score(Vars_indep,Vars_dep)\n",
        "coef_Deter"
      ],
      "metadata": {
        "id": "HCZ-jS7z2RYn",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1b7a01c2-be7f-4c2c-faf4-e7ebff5202b1"
      },
      "execution_count": 114,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.5330978364043268"
            ]
          },
          "metadata": {},
          "execution_count": 114
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Corroboramos cual es el coeficiente de Determinación de nuestro modelo\n",
        "coef_Correl=np.sqrt(coef_Deter)\n",
        "coef_Correl"
      ],
      "metadata": {
        "id": "Dh-DTmit2yDw",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6bd30dcc-9ac5-4ee5-8e45-8fef63a403af"
      },
      "execution_count": 115,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.7301354918125312"
            ]
          },
          "metadata": {},
          "execution_count": 115
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Imprimimos el scatter plot entre la variable dependiente (total) e independiente (alcohol)\n",
        "#Para observar el comportamiento con su dispersión\n",
        "from turtle import color\n",
        "\n",
        "sns.scatterplot(x='host_listings_count', y='host_total_listings_count', color=\"blue\", data=df)\n",
        "sns.scatterplot(x='calculated_host_listings_count', y=\"host_total_listings_count\", color=\"red\", data=df)\n",
        "sns.scatterplot(x='calculated_host_listings_count_entire_homes', y=\"host_total_listings_count\", color=\"yellow\", data=df)\n",
        "\n",
        "#Alcohol tiene mejor correlacion"
      ],
      "metadata": {
        "id": "GaBIsqqVovRc",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 468
        },
        "outputId": "d79e6ba6-1875-4e61-ec3e-8235f0898557"
      },
      "execution_count": 120,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='host_listings_count', ylabel='host_total_listings_count'>"
            ]
          },
          "metadata": {},
          "execution_count": 120
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Visualizamos la gráfica comparativa entre el total real y el total del parecido\n",
        "\n",
        "sns.scatterplot(x='host_listings_count', y='host_total_listings_count', color=\"blue\", data=df)\n",
        "sns.scatterplot(x='host_listings_count', y='predicciones', color=\"red\", data=df)\n",
        "#sns.lineplot(x=alcohol', y='predicciones', color=\"red\", data=df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 468
        },
        "id": "sreToVv7v5sh",
        "outputId": "0a86f006-80bc-4f98-eafb-973d7b89076c"
      },
      "execution_count": 121,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='host_listings_count', ylabel='host_total_listings_count'>"
            ]
          },
          "metadata": {},
          "execution_count": 121
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Analizar categorias de una columna\n",
        "cate =df.groupby(['room_type'])['room_type'].count()\n",
        "cate"
      ],
      "metadata": {
        "id": "LAwYwYJ--4yA",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 241
        },
        "outputId": "d890041c-b57f-4d3a-d863-faae39d1ef5d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "room_type\n",
              "1.0    17432\n",
              "2.0     8581\n",
              "3.0      401\n",
              "4.0      122\n",
              "Name: room_type, dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>room_type</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>room_type</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1.0</th>\n",
              "      <td>17432</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2.0</th>\n",
              "      <td>8581</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3.0</th>\n",
              "      <td>401</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4.0</th>\n",
              "      <td>122</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Eliminar un signo de una columna\n",
        "df['room_type']=df['room_type'].str.replace('Entire home/apt', '1')\n",
        "df['room_type']=df['room_type'].str.replace('Private room', '2')\n",
        "df['room_type']=df['room_type'].str.replace('Shared room', '3')\n",
        "df['room_type']=df['room_type'].str.replace('Hotel room', '4')\n",
        "df['room_type']=df['room_type'].str.replace('En1ire home/ap1', '1')\n",
        "df['room_type']=df['room_type'].str.replace('Priva1e room', '2')\n",
        "df['room_type']=df['room_type'].str.replace('Ho1el room', '4')"
      ],
      "metadata": {
        "id": "35rURsJd_Kfv"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Conversión de tipo de dato de columna de tipo Object a Float\n",
        "df['room_type']= df['room_type'].astype(float)"
      ],
      "metadata": {
        "id": "-eCNJ7L8AChJ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Declaramos las variables dependientes e independientes para la regresión lineal\n",
        "#Vars_indep = df[['alcohol', 'speding']]\n",
        "Vars_indep = df[['accommodates', 'calculated_host_listings_count_private_rooms', 'bedrooms']]\n",
        "Vars_dep = df['room_type']"
      ],
      "metadata": {
        "id": "mo8-mz--A3gP"
      },
      "execution_count": 128,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Se define model como la función de regresión lineal\n",
        "from sklearn.linear_model import LinearRegression\n",
        "model = LinearRegression()"
      ],
      "metadata": {
        "id": "MluNs7MqBn9N"
      },
      "execution_count": 129,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Ajustar el modelo con las variables antes declaradas\n",
        "model.fit(X=Vars_indep, y=Vars_dep)"
      ],
      "metadata": {
        "id": "-4l7e8zKBxeZ",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 80
        },
        "outputId": "6a2aaeb6-8380-4d00-c8d1-704e66089c41"
      },
      "execution_count": 130,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinearRegression()"
            ],
            "text/html": [
              "<style>#sk-container-id-7 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: black;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-7 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-7 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-7 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-7 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-7 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: block;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-7 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-7 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-7 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-7 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-7 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-7 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-7 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 1ex;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-7 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-7 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-7\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" checked><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;LinearRegression<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.LinearRegression.html\">?<span>Documentation for LinearRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>LinearRegression()</pre></div> </div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 130
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Verificamos los coeficientes obtenidos para el modelo ajustado\n",
        "model.__dict__\n"
      ],
      "metadata": {
        "id": "IcTi-ZRrCO9X",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "111f07a7-b31e-4cdd-e818-104c86ace075"
      },
      "execution_count": 131,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'fit_intercept': True,\n",
              " 'copy_X': True,\n",
              " 'n_jobs': None,\n",
              " 'positive': False,\n",
              " 'feature_names_in_': array(['accommodates', 'calculated_host_listings_count_private_rooms',\n",
              "        'bedrooms'], dtype=object),\n",
              " 'n_features_in_': 3,\n",
              " 'coef_': array([-0.12322945,  0.03863098,  0.01497509]),\n",
              " 'rank_': 3,\n",
              " 'singular_': array([627.96817528, 293.10252998,  85.8220629 ]),\n",
              " 'intercept_': 1.6597722528662668}"
            ]
          },
          "metadata": {},
          "execution_count": 131
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Predecciomso los valores del total de accidentes a partir de las variables: \"alcohol\", \"speeding\", y \"no_previous\"\n",
        "y_pred = model.predict(X=df[['accommodates', 'calculated_host_listings_count_private_rooms', 'bedrooms']])\n",
        "y_pred"
      ],
      "metadata": {
        "id": "ZKOeEhGWCPpT",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "18948ad7-5019-4f0c-8b26-6130143491d4"
      },
      "execution_count": 132,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1.46691943, 1.42828845, 1.40525248, ..., 1.30505901, 1.18182956,\n",
              "       1.96942416])"
            ]
          },
          "metadata": {},
          "execution_count": 132
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Corroboramos cual es el coficiente de Dterminación de nuestro modelo\n",
        "coef_Deter=model.score(Vars_indep,Vars_dep)\n",
        "coef_Deter"
      ],
      "metadata": {
        "id": "FD_crAPECesq",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2faddc8c-3e30-4c5a-95bf-85898f4903b1"
      },
      "execution_count": 133,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.26596108877038815"
            ]
          },
          "metadata": {},
          "execution_count": 133
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Corroboramos cual es el coeficiente de Determinación de nuestro modelo\n",
        "coef_Correl=np.sqrt(coef_Deter)\n",
        "coef_Correl"
      ],
      "metadata": {
        "id": "Gy8q4XSbChl8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2eef9c38-8468-4e35-de8f-4f86a5af92cb"
      },
      "execution_count": 134,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.5157141541303556"
            ]
          },
          "metadata": {},
          "execution_count": 134
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Declaramos las variables dependientes e independientes para la regresión lineal\n",
        "#Vars_indep = df[['alcohol', 'speding']]\n",
        "Vars_indep = df[['bathrooms', 'bedrooms', 'beds']]\n",
        "Vars_dep = df['accommodates']"
      ],
      "metadata": {
        "id": "HuldPJdBD9W_"
      },
      "execution_count": 135,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Se define model como la función de regresión lineal\n",
        "from sklearn.linear_model import LinearRegression\n",
        "model = LinearRegression()"
      ],
      "metadata": {
        "id": "KWhiIDd5Evx6"
      },
      "execution_count": 136,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Ajustar el modelo con las variables antes declaradas\n",
        "model.fit(X=Vars_indep, y=Vars_dep)"
      ],
      "metadata": {
        "id": "WoaCBSz_Ewmo",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 80
        },
        "outputId": "d40dc607-68d8-4f0f-fe53-9f0f3a7709f4"
      },
      "execution_count": 137,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinearRegression()"
            ],
            "text/html": [
              "<style>#sk-container-id-8 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: black;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-8 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-8 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-8 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-8 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-8 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: block;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-8 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-8 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-8 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-8 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-8 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-8 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-8 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 1ex;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-8 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-8 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-8\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-8\" type=\"checkbox\" checked><label for=\"sk-estimator-id-8\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;LinearRegression<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.LinearRegression.html\">?<span>Documentation for LinearRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>LinearRegression()</pre></div> </div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 137
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Verificamos los coeficientes obtenidos para el modelo ajustado\n",
        "model.__dict__"
      ],
      "metadata": {
        "id": "k2_IjTr8Ez5p",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "5381d320-15b0-48fb-ec79-8545942e05b0"
      },
      "execution_count": 138,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'fit_intercept': True,\n",
              " 'copy_X': True,\n",
              " 'n_jobs': None,\n",
              " 'positive': False,\n",
              " 'feature_names_in_': array(['bathrooms', 'bedrooms', 'beds'], dtype=object),\n",
              " 'n_features_in_': 3,\n",
              " 'coef_': array([0.13837235, 0.99549017, 0.62388963]),\n",
              " 'rank_': 3,\n",
              " 'singular_': array([203.43734903,  96.87539905,  70.69127444]),\n",
              " 'intercept_': 0.3522809472781856}"
            ]
          },
          "metadata": {},
          "execution_count": 138
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Modelo 0.13837235x+ 0.99549017x+ 0.62388963x+ 0.3522809472781856"
      ],
      "metadata": {
        "id": "EBICOCndKE7Q"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Predecciomso los valores del total de accidentes a partir de las variables: \"alcohol\", \"speeding\", y \"no_previous\"\n",
        "y_pred = model.predict(X=df[['bathrooms', 'bedrooms', 'beds']])\n",
        "y_pred"
      ],
      "metadata": {
        "id": "y2S2crWgE2Cq",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "84d51f39-7d24-4713-fe09-0bd43af62294"
      },
      "execution_count": 139,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([2.73392272, 2.11003309, 6.72268062, ..., 2.11003309, 2.8031089 ,\n",
              "       3.72941289])"
            ]
          },
          "metadata": {},
          "execution_count": 139
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.insert(0, 'predicciones1', y_pred)\n"
      ],
      "metadata": {
        "id": "1CyaZ_h-K4N2"
      },
      "execution_count": 170,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Imprimimos el scatter plot entre la variable dependiente (total) e independiente (alcohol)\n",
        "#Para observar el comportamiento con su dispersión\n",
        "from turtle import color\n",
        "\n",
        "sns.scatterplot(x='bathrooms', y='accommodates', color=\"blue\", data=df)\n",
        "sns.scatterplot(x='bedrooms', y=\"accommodates\", color=\"red\", data=df)\n",
        "sns.scatterplot(x='beds', y=\"accommodates\", color=\"yellow\", data=df)\n",
        "\n",
        "#Alcohol tiene mejor correlacion"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        },
        "id": "F4YJHl3-Kj5N",
        "outputId": "fd1596ac-6429-4f7f-b50c-58d81224d793"
      },
      "execution_count": 171,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='bathrooms', ylabel='accommodates'>"
            ]
          },
          "metadata": {},
          "execution_count": 171
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Visualizamos la gráfica comparativa entre el total real y el total del parecido\n",
        "\n",
        "sns.scatterplot(x='bathrooms', y='accommodates', color=\"blue\", data=df)\n",
        "sns.scatterplot(x='bathrooms', y='predicciones1', color=\"red\", data=df)\n",
        "#sns.lineplot(x=alcohol', y='predicciones', color=\"red\", data=df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        },
        "id": "TlUPaDRtLjUa",
        "outputId": "dd60da1a-a4e2-411a-a03d-473aad92f750"
      },
      "execution_count": 172,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='bathrooms', ylabel='accommodates'>"
            ]
          },
          "metadata": {},
          "execution_count": 172
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Corroboramos cual es el coficiente de Dterminación de nuestro modelo\n",
        "coef_Deter=model.score(Vars_indep,Vars_dep)\n",
        "coef_Deter"
      ],
      "metadata": {
        "id": "r5Lbz0MZE7k4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7ccddb75-ab41-40d3-a03c-4cd2e63e52e9"
      },
      "execution_count": 140,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.5748298309714861"
            ]
          },
          "metadata": {},
          "execution_count": 140
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Corroboramos cual es el coeficiente de Determinación de nuestro modelo\n",
        "coef_Correl=np.sqrt(coef_Deter)\n",
        "coef_Correl"
      ],
      "metadata": {
        "id": "L4ArGmUFE8bC",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f82e3a51-d326-4c8b-850e-51753f2631fd"
      },
      "execution_count": 141,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.7581753299676046"
            ]
          },
          "metadata": {},
          "execution_count": 141
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Declaramos las variables dependientes e independientes para la regresión lineal\n",
        "#Vars_indep = df[['alcohol', 'speding']]\n",
        "Vars_indep = df[['accommodates', 'bathrooms', 'beds']]\n",
        "Vars_dep = df['bedrooms']"
      ],
      "metadata": {
        "id": "KIf_dMj5E-g6"
      },
      "execution_count": 175,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Se define model como la función de regresión lineal\n",
        "from sklearn.linear_model import LinearRegression\n",
        "model = LinearRegression()"
      ],
      "metadata": {
        "id": "fQy3fp7uGH-L"
      },
      "execution_count": 143,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Ajustar el modelo con las variables antes declaradas\n",
        "model.fit(X=Vars_indep, y=Vars_dep)"
      ],
      "metadata": {
        "id": "qkp7wXfWGO6l",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 80
        },
        "outputId": "6803dec3-086c-4fba-d9ce-472e1dd5056a"
      },
      "execution_count": 144,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinearRegression()"
            ],
            "text/html": [
              "<style>#sk-container-id-9 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: black;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-9 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-9 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-9 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-9 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-9 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-9 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-9 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: block;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "#sk-container-id-9 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-9 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-9 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-9 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-9 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-9 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-9 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-9 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-9 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-9 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-9 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 1ex;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-9 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-9 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-9 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-9 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-9\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-9\" type=\"checkbox\" checked><label for=\"sk-estimator-id-9\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;LinearRegression<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.LinearRegression.html\">?<span>Documentation for LinearRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>LinearRegression()</pre></div> </div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 144
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Verificamos los coeficientes obtenidos para el modelo ajustado\n",
        "model.__dict__\n"
      ],
      "metadata": {
        "id": "hrPXXVa4GRRO",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e8a922a7-2a95-4e1f-f8b9-6f68d44adf31"
      },
      "execution_count": 145,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'fit_intercept': True,\n",
              " 'copy_X': True,\n",
              " 'n_jobs': None,\n",
              " 'positive': False,\n",
              " 'feature_names_in_': array(['accommodates', 'bathrooms', 'beds'], dtype=object),\n",
              " 'n_features_in_': 3,\n",
              " 'coef_': array([0.18832263, 0.35046635, 0.14542524]),\n",
              " 'rank_': 3,\n",
              " 'singular_': array([317.52707486, 120.02400134,  84.04819235]),\n",
              " 'intercept_': 0.1615438578309687}"
            ]
          },
          "metadata": {},
          "execution_count": 145
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Modelo 0.18832263x, 0.35046635x, 0.14542524x + 0.1615438578309687"
      ],
      "metadata": {
        "id": "Y6fLkDZ9JmhE"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Predecciomso los valores del total de accidentes a partir de las variables: \"alcohol\", \"speeding\", y \"no_previous\"\n",
        "y_pred = model.predict(X=df[['accommodates', 'bathrooms', 'beds']])\n",
        "y_pred"
      ],
      "metadata": {
        "id": "E7Rz1MJ-GTta",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f4c91a2c-f016-49ac-8557-dabd354bb71b"
      },
      "execution_count": 146,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1.17950594, 1.0340807 , 1.585016  , ..., 1.22240332, 1.73138436,\n",
              "       1.55615119])"
            ]
          },
          "metadata": {},
          "execution_count": 146
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.insert(0, 'predicciones2', y_pred)"
      ],
      "metadata": {
        "id": "wl00XZp-NHrC"
      },
      "execution_count": 176,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Corroboramos cual es el coficiente de Dterminación de nuestro modelo\n",
        "coef_Deter=model.score(Vars_indep,Vars_dep)\n",
        "coef_Deter"
      ],
      "metadata": {
        "id": "2WSaKfNfGbNT",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6d4eeb32-e0b5-44a1-f0db-31f973512fa0"
      },
      "execution_count": 147,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.575060779919248"
            ]
          },
          "metadata": {},
          "execution_count": 147
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Corroboramos cual es el coeficiente de Determinación de nuestro modelo\n",
        "coef_Correl=np.sqrt(coef_Deter)\n",
        "coef_Correl"
      ],
      "metadata": {
        "id": "jZ0SFyF3Gd0X",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2425d3e0-07a4-488b-adf1-c6df57d7d39f"
      },
      "execution_count": 148,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.7583276204380585"
            ]
          },
          "metadata": {},
          "execution_count": 148
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Imprimimos el scatter plot entre la variable dependiente (total) e independiente (alcohol)\n",
        "#Para observar el comportamiento con su dispersión\n",
        "from turtle import color\n",
        "\n",
        "sns.scatterplot(x='accommodates', y='bedrooms', color=\"blue\", data=df)\n",
        "sns.scatterplot(x='bathrooms', y=\"bedrooms\", color=\"red\", data=df)\n",
        "sns.scatterplot(x='beds', y=\"bedrooms\", color=\"yellow\", data=df)\n",
        "\n",
        "#Alcohol tiene mejor correlacion"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        },
        "id": "T1_S6GlxMhP2",
        "outputId": "40c49fbd-6fd9-4b10-aa95-28ccad8e5355"
      },
      "execution_count": 173,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='accommodates', ylabel='bedrooms'>"
            ]
          },
          "metadata": {},
          "execution_count": 173
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Visualizamos la gráfica comparativa entre el total real y el total del parecido\n",
        "\n",
        "sns.scatterplot(x='accommodates', y='bedrooms', color=\"blue\", data=df)\n",
        "sns.scatterplot(x='accommodates', y='predicciones2', color=\"red\", data=df)\n",
        "#sns.lineplot(x=alcohol', y='predicciones', color=\"red\", data=df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        },
        "id": "np4jIDQmNO-s",
        "outputId": "e0461a7c-b723-4e3a-c8b7-cb0dfd5e1166"
      },
      "execution_count": 177,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='accommodates', ylabel='bedrooms'>"
            ]
          },
          "metadata": {},
          "execution_count": 177
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "53SkYnYCM70Q"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Declaramos las variables dependientes e independientes para la regresión lineal\n",
        "#Vars_indep = df[['alcohol', 'speding']]\n",
        "Vars_indep = df[['bathrooms', 'bedrooms', 'beds']]\n",
        "Vars_dep = df['price']"
      ],
      "metadata": {
        "id": "kjw9yOdyGgsh"
      },
      "execution_count": 149,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Se define model como la función de regresión lineal\n",
        "from sklearn.linear_model import LinearRegression\n",
        "model = LinearRegression()"
      ],
      "metadata": {
        "id": "rsKgKE6-Jdgd"
      },
      "execution_count": 150,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Ajustar el modelo con las variables antes declaradas\n",
        "model.fit(X=Vars_indep, y=Vars_dep)"
      ],
      "metadata": {
        "id": "BweXRDt9MhDL",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 80
        },
        "outputId": "e3674faf-56aa-44d9-854a-02951ba53342"
      },
      "execution_count": 151,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinearRegression()"
            ],
            "text/html": [
              "<style>#sk-container-id-10 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: black;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-10 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-10 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-10 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-10 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-10 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-10 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-10 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-10 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-10 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-10 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-10 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-10 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-10 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-10 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-10 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: block;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "#sk-container-id-10 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-10 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-10 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-10 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-10 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-10 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-10 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-10 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-10 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-10 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-10 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-10 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-10 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-10 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-10 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-10 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-10 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-10 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-10 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-10 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-10 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-10 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 1ex;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-10 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-10 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-10 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-10 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-10\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-10\" type=\"checkbox\" checked><label for=\"sk-estimator-id-10\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;LinearRegression<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.LinearRegression.html\">?<span>Documentation for LinearRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>LinearRegression()</pre></div> </div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 151
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Verificamos los coeficientes obtenidos para el modelo ajustado\n",
        "model.__dict__\n"
      ],
      "metadata": {
        "id": "zlamvjCIMh50",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "72da7115-f454-4220-91fe-fa0884638343"
      },
      "execution_count": 152,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'fit_intercept': True,\n",
              " 'copy_X': True,\n",
              " 'n_jobs': None,\n",
              " 'positive': False,\n",
              " 'feature_names_in_': array(['bathrooms', 'bedrooms', 'beds'], dtype=object),\n",
              " 'n_features_in_': 3,\n",
              " 'coef_': array([436.41080564, 370.2679297 ,  79.01804291]),\n",
              " 'rank_': 3,\n",
              " 'singular_': array([203.43734903,  96.87539905,  70.69127444]),\n",
              " 'intercept_': 26.94328138593164}"
            ]
          },
          "metadata": {},
          "execution_count": 152
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Predecciomso los valores del total de accidentes a partir de las variables: \"alcohol\", \"speeding\", y \"no_previous\"\n",
        "y_pred = model.predict(X=df[['bathrooms', 'bedrooms', 'beds']])\n",
        "y_pred"
      ],
      "metadata": {
        "id": "g8qc_hRZMlpf",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3b557568-0454-4073-878a-b3c17ec9e4c1"
      },
      "execution_count": 153,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 991.65810253,  912.64005963, 2683.03341985, ...,  912.64005963,\n",
              "       1209.86350535, 1361.92603223])"
            ]
          },
          "metadata": {},
          "execution_count": 153
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Corroboramos cual es el coficiente de Dterminación de nuestro modelo\n",
        "coef_Deter=model.score(Vars_indep,Vars_dep)\n",
        "coef_Deter"
      ],
      "metadata": {
        "id": "fcReAIxeM0g7",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "907a78b6-ff5b-4b07-c494-8d33b4b1c782"
      },
      "execution_count": 154,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.20572285329325934"
            ]
          },
          "metadata": {},
          "execution_count": 154
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Corroboramos cual es el coeficiente de Determinación de nuestro modelo\n",
        "coef_Correl=np.sqrt(coef_Deter)\n",
        "coef_Correl"
      ],
      "metadata": {
        "id": "My_CIVHjM6Mm",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "bd1eda0b-947c-45ce-c7fb-1e2432b26a4c"
      },
      "execution_count": 155,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.4535668123807774"
            ]
          },
          "metadata": {},
          "execution_count": 155
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Declaramos las variables dependientes e independientes para la regresión lineal\n",
        "#Vars_indep = df[['alcohol', 'speding']]\n",
        "Vars_indep = df[['review_scores_rating', 'review_scores_accuracy', 'review_scores_cleanliness']]\n",
        "Vars_dep = df['review_scores_value']"
      ],
      "metadata": {
        "id": "Asm3AnvQM7_-"
      },
      "execution_count": 156,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Se define model como la función de regresión lineal\n",
        "from sklearn.linear_model import LinearRegression\n",
        "model = LinearRegression()"
      ],
      "metadata": {
        "id": "tI3zDrB4O2CT"
      },
      "execution_count": 157,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Ajustar el modelo con las variables antes declaradas\n",
        "model.fit(X=Vars_indep, y=Vars_dep)"
      ],
      "metadata": {
        "id": "CwZ8xNQiO4GR",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 80
        },
        "outputId": "339817b8-f491-4200-e7ed-ed6fa162deeb"
      },
      "execution_count": 158,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinearRegression()"
            ],
            "text/html": [
              "<style>#sk-container-id-11 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: black;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-11 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-11 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-11 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-11 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-11 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-11 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-11 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-11 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-11 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-11 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-11 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-11 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-11 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-11 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-11 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: block;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "#sk-container-id-11 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-11 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-11 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-11 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-11 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-11 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-11 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-11 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-11 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-11 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-11 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-11 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-11 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-11 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-11 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-11 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-11 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-11 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-11 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-11 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-11 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-11 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 1ex;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-11 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-11 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-11 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-11 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-11\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-11\" type=\"checkbox\" checked><label for=\"sk-estimator-id-11\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;LinearRegression<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.LinearRegression.html\">?<span>Documentation for LinearRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>LinearRegression()</pre></div> </div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 158
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Verificamos los coeficientes obtenidos para el modelo ajustado\n",
        "model.__dict__\n"
      ],
      "metadata": {
        "id": "jxdoqeeJO6PZ",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "55c859cc-e2b3-499e-8c81-f1338d8abfd1"
      },
      "execution_count": 159,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'fit_intercept': True,\n",
              " 'copy_X': True,\n",
              " 'n_jobs': None,\n",
              " 'positive': False,\n",
              " 'feature_names_in_': array(['review_scores_rating', 'review_scores_accuracy',\n",
              "        'review_scores_cleanliness'], dtype=object),\n",
              " 'n_features_in_': 3,\n",
              " 'coef_': array([0.44296258, 0.3158119 , 0.14783989]),\n",
              " 'rank_': 3,\n",
              " 'singular_': array([47.51063733, 22.09635835, 17.7752081 ]),\n",
              " 'intercept_': 0.3966366721921899}"
            ]
          },
          "metadata": {},
          "execution_count": 159
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Modelo y = 0.44296258x + 0.3158119x + 0.14783989x + 0.3966366721921899"
      ],
      "metadata": {
        "id": "DGLb6ondN09k"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Predecciomso los valores del total de accidentes a partir de las variables: \"alcohol\", \"speeding\", y \"no_previous\"\n",
        "y_pred = model.predict(X=df[['review_scores_rating', 'review_scores_accuracy', 'review_scores_cleanliness']])\n",
        "y_pred"
      ],
      "metadata": {
        "id": "LAZvxCyOO67e",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a5e00cca-8373-4410-bebe-c670e8921799"
      },
      "execution_count": 160,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([4.87806156, 4.74838565, 4.56035504, ..., 4.74838565, 4.74838565,\n",
              "       4.74838565])"
            ]
          },
          "metadata": {},
          "execution_count": 160
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.insert(0, 'predicciones3', y_pred)"
      ],
      "metadata": {
        "id": "-Cwtye-2OMMX"
      },
      "execution_count": 178,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Imprimimos el scatter plot entre la variable dependiente (total) e independiente (alcohol)\n",
        "#Para observar el comportamiento con su dispersión\n",
        "from turtle import color\n",
        "sns.scatterplot(x='review_scores_cleanliness', y=\"review_scores_value\", color=\"yellow\", data=df)\n",
        "sns.scatterplot(x='review_scores_rating', y='review_scores_value', color=\"blue\", data=df)\n",
        "sns.scatterplot(x='review_scores_accuracy', y=\"review_scores_value\", color=\"red\", data=df)\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 468
        },
        "id": "T2XsCPGROX61",
        "outputId": "09a266bb-002c-43eb-e364-81da39d653d8"
      },
      "execution_count": 180,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='review_scores_cleanliness', ylabel='review_scores_value'>"
            ]
          },
          "metadata": {},
          "execution_count": 180
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Visualizamos la gráfica comparativa entre el total real y el total del parecido\n",
        "\n",
        "sns.scatterplot(x='review_scores_cleanliness', y='review_scores_value', color=\"blue\", data=df)\n",
        "sns.scatterplot(x='review_scores_cleanliness', y='predicciones3', color=\"red\", data=df)\n",
        "#sns.lineplot(x=alcohol', y='predicciones', color=\"red\", data=df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 468
        },
        "id": "szQETC5oO6sw",
        "outputId": "0b07d074-a528-4e14-948f-5b68727a7ec5"
      },
      "execution_count": 181,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='review_scores_cleanliness', ylabel='review_scores_value'>"
            ]
          },
          "metadata": {},
          "execution_count": 181
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Corroboramos cual es el coficiente de Dterminación de nuestro modelo\n",
        "coef_Deter=model.score(Vars_indep,Vars_dep)\n",
        "coef_Deter"
      ],
      "metadata": {
        "id": "-hTOTKd-PGEY",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "38ca5df6-e1c0-4d44-818b-4414651de865"
      },
      "execution_count": 161,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.5430727162939619"
            ]
          },
          "metadata": {},
          "execution_count": 161
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Corroboramos cual es el coeficiente de Determinación de nuestro modelo\n",
        "coef_Correl=np.sqrt(coef_Deter)\n",
        "coef_Correl"
      ],
      "metadata": {
        "id": "Mxwk9GvSPG8H",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "eff43c10-a53d-41e5-e82e-9d7188d7615f"
      },
      "execution_count": 162,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.7369346757304625"
            ]
          },
          "metadata": {},
          "execution_count": 162
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Declaramos las variables dependientes e independientes para la regresión lineal\n",
        "#Vars_indep = df[['alcohol', 'speding']]\n",
        "Vars_indep = df[['number_of_reviews_ltm', 'number_of_reviews_l30d', 'number_of_reviews']]\n",
        "Vars_dep = df['reviews_per_month']"
      ],
      "metadata": {
        "id": "8HaGJR28PL5Q"
      },
      "execution_count": 163,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Se define model como la función de regresión lineal\n",
        "from sklearn.linear_model import LinearRegression\n",
        "model = LinearRegression()"
      ],
      "metadata": {
        "id": "TuJYpJhEPUGE"
      },
      "execution_count": 164,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Ajustar el modelo con las variables antes declaradas\n",
        "model.fit(X=Vars_indep, y=Vars_dep)"
      ],
      "metadata": {
        "id": "oFT-8-TvQqnd",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 80
        },
        "outputId": "e3a63d66-e3fe-43da-c918-7820afc37625"
      },
      "execution_count": 165,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinearRegression()"
            ],
            "text/html": [
              "<style>#sk-container-id-12 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: black;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-12 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-12 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-12 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-12 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-12 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-12 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-12 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: block;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "#sk-container-id-12 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-12 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-12 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-12 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-12 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-12 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-12 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-12 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-12 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-12 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-12 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-12 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-12 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 1ex;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-12 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-12 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-12 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-12 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-12\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-12\" type=\"checkbox\" checked><label for=\"sk-estimator-id-12\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;LinearRegression<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.LinearRegression.html\">?<span>Documentation for LinearRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>LinearRegression()</pre></div> </div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 165
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Verificamos los coeficientes obtenidos para el modelo ajustado\n",
        "model.__dict__\n"
      ],
      "metadata": {
        "id": "Gz9ViIquQrp0",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "78ac2956-ddb6-4139-df26-af3296a4eeed"
      },
      "execution_count": 166,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'fit_intercept': True,\n",
              " 'copy_X': True,\n",
              " 'n_jobs': None,\n",
              " 'positive': False,\n",
              " 'feature_names_in_': array(['number_of_reviews_ltm', 'number_of_reviews_l30d',\n",
              "        'number_of_reviews'], dtype=object),\n",
              " 'n_features_in_': 3,\n",
              " 'coef_': array([0.04778692, 0.24918051, 0.00081078]),\n",
              " 'rank_': 3,\n",
              " 'singular_': array([8130.19945434, 1952.49764927,  165.11352928]),\n",
              " 'intercept_': 0.7779074226329385}"
            ]
          },
          "metadata": {},
          "execution_count": 166
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Modelo matematico 0.04778692x + 0.24918051x + 0.00081078x + 0.7779074226329385"
      ],
      "metadata": {
        "id": "Ro4OVirIP-Rn"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Predecciomso los valores del total de accidentes a partir de las variables: \"alcohol\", \"speeding\", y \"no_previous\"\n",
        "y_pred = model.predict(X=df[['number_of_reviews_ltm', 'number_of_reviews_l30d', 'number_of_reviews']])\n",
        "y_pred"
      ],
      "metadata": {
        "id": "rkrPI4jeQ0xI",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "952e275f-468e-4fc4-a7d6-f633b02345c9"
      },
      "execution_count": 167,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0.96667171, 0.77790742, 0.82979715, ..., 0.77790742, 0.77790742,\n",
              "       0.77790742])"
            ]
          },
          "metadata": {},
          "execution_count": 167
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.insert(0, 'predicciones4', y_pred)"
      ],
      "metadata": {
        "id": "ZGMz879mPUvn"
      },
      "execution_count": 182,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Imprimimos el scatter plot entre la variable dependiente (total) e independiente (alcohol)\n",
        "#Para observar el comportamiento con su dispersión\n",
        "from turtle import color\n",
        "sns.scatterplot(x='number_of_reviews_ltm', y=\"reviews_per_month\", color=\"yellow\", data=df)\n",
        "sns.scatterplot(x='number_of_reviews_l30d', y='reviews_per_month', color=\"blue\", data=df)\n",
        "sns.scatterplot(x='number_of_reviews', y=\"reviews_per_month\", color=\"red\", data=df)\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 468
        },
        "id": "PcWAasx5Pck3",
        "outputId": "2ab11d90-7ca4-42f0-8558-cd34da02ee47"
      },
      "execution_count": 183,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='number_of_reviews_ltm', ylabel='reviews_per_month'>"
            ]
          },
          "metadata": {},
          "execution_count": 183
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Visualizamos la gráfica comparativa entre el total real y el total del parecido\n",
        "\n",
        "sns.scatterplot(x='number_of_reviews_ltm', y='reviews_per_month', color=\"blue\", data=df)\n",
        "sns.scatterplot(x='number_of_reviews_ltm', y='predicciones4', color=\"red\", data=df)\n",
        "#sns.lineplot(x=alcohol', y='predicciones', color=\"red\", data=df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 468
        },
        "id": "tcIF3ESyPuoH",
        "outputId": "297c57aa-2ff1-4677-f407-b76471b086f9"
      },
      "execution_count": 184,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='number_of_reviews_ltm', ylabel='reviews_per_month'>"
            ]
          },
          "metadata": {},
          "execution_count": 184
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Corroboramos cual es el coficiente de Dterminación de nuestro modelo\n",
        "coef_Deter=model.score(Vars_indep,Vars_dep)\n",
        "coef_Deter"
      ],
      "metadata": {
        "id": "9ER6nWi3Q8rt",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "02e9dde9-2f51-4c2f-dd85-c63dcebd2b94"
      },
      "execution_count": 168,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.5732316193235385"
            ]
          },
          "metadata": {},
          "execution_count": 168
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Corroboramos cual es el coeficiente de Determinación de nuestro modelo\n",
        "coef_Correl=np.sqrt(coef_Deter)\n",
        "coef_Correl"
      ],
      "metadata": {
        "id": "jB-AJ_yVRA0q",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "423082b9-4f79-4bcd-e500-68cd94d6d1f7"
      },
      "execution_count": 169,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.7571206108167565"
            ]
          },
          "metadata": {},
          "execution_count": 169
        }
      ]
    }
  ]
}